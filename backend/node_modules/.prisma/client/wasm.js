
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  schoolId: 'schoolId',
  verified: 'verified',
  createdAt: 'createdAt'
};

exports.Prisma.SchoolScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  directorId: 'directorId'
};

exports.Prisma.MenuScalarFieldEnum = {
  id: 'id',
  title: 'title',
  week: 'week',
  weekStart: 'weekStart',
  uploadedAt: 'uploadedAt',
  uploadedById: 'uploadedById',
  schoolId: 'schoolId'
};

exports.Prisma.MenuItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  menuId: 'menuId'
};

exports.Prisma.SelectionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  menuItemId: 'menuItemId',
  quantity: 'quantity',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  DIRECTOR: 'DIRECTOR',
  PARENT: 'PARENT',
  TEACHER: 'TEACHER',
  SUPERADMIN: 'SUPERADMIN'
};

exports.Prisma.ModelName = {
  User: 'User',
  School: 'School',
  Menu: 'Menu',
  MenuItem: 'MenuItem',
  Selection: 'Selection'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\User\\Downloads\\school-meals-app-download\\school-meals-app — копия\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\User\\Downloads\\school-meals-app-download\\school-meals-app — копия\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  email     String   @unique\n  password  String\n  role      Role\n  schoolId  Int?\n  verified  Boolean  @default(false)\n  createdAt DateTime @default(now())\n\n  directedSchools School[]    @relation(\"SchoolDirector\")\n  uploadedMenus   Menu[]      @relation(\"MenuUploader\")\n  selections      Selection[]\n}\n\nmodel School {\n  id      Int     @id @default(autoincrement())\n  name    String\n  address String?\n\n  directorId Int?\n  director   User? @relation(\"SchoolDirector\", fields: [directorId], references: [id])\n\n  menus Menu[]\n}\n\nmodel Menu {\n  id         Int       @id @default(autoincrement())\n  title      String?\n  week       String?\n  weekStart  DateTime?\n  uploadedAt DateTime  @default(now())\n\n  uploadedById Int\n  uploadedBy   User @relation(\"MenuUploader\", fields: [uploadedById], references: [id])\n\n  schoolId Int\n  school   School @relation(fields: [schoolId], references: [id])\n\n  items MenuItem[]\n}\n\nmodel MenuItem {\n  id    Int    @id @default(autoincrement())\n  name  String\n  price Float  @default(0)\n\n  menuId Int\n  menu   Menu @relation(fields: [menuId], references: [id])\n\n  selections Selection[]\n}\n\nmodel Selection {\n  id     Int  @id @default(autoincrement())\n  userId Int\n  user   User @relation(fields: [userId], references: [id])\n\n  menuItemId Int\n  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])\n\n  quantity  Int      @default(1)\n  createdAt DateTime @default(now())\n}\n\nenum Role {\n  DIRECTOR\n  PARENT\n  TEACHER\n  SUPERADMIN\n}\n",
  "inlineSchemaHash": "c465f7d21dfb67dd649c62f4cde500ca12afd5ad8f7dc15823ccbd568228d10f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"schoolId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"directedSchools\",\"kind\":\"object\",\"type\":\"School\",\"relationName\":\"SchoolDirector\"},{\"name\":\"uploadedMenus\",\"kind\":\"object\",\"type\":\"Menu\",\"relationName\":\"MenuUploader\"},{\"name\":\"selections\",\"kind\":\"object\",\"type\":\"Selection\",\"relationName\":\"SelectionToUser\"}],\"dbName\":null},\"School\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"directorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"director\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SchoolDirector\"},{\"name\":\"menus\",\"kind\":\"object\",\"type\":\"Menu\",\"relationName\":\"MenuToSchool\"}],\"dbName\":null},\"Menu\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"week\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weekStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MenuUploader\"},{\"name\":\"schoolId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"school\",\"kind\":\"object\",\"type\":\"School\",\"relationName\":\"MenuToSchool\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"MenuItem\",\"relationName\":\"MenuToMenuItem\"}],\"dbName\":null},\"MenuItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"menuId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"menu\",\"kind\":\"object\",\"type\":\"Menu\",\"relationName\":\"MenuToMenuItem\"},{\"name\":\"selections\",\"kind\":\"object\",\"type\":\"Selection\",\"relationName\":\"MenuItemToSelection\"}],\"dbName\":null},\"Selection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SelectionToUser\"},{\"name\":\"menuItemId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"menuItem\",\"kind\":\"object\",\"type\":\"MenuItem\",\"relationName\":\"MenuItemToSelection\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

