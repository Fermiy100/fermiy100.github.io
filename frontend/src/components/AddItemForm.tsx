import { useState } from 'react';

interface AddItemFormProps {
  onAdd: (formData: any) => void;
  onCancel: () => void;
}

export default function AddItemForm({ onAdd, onCancel }: AddItemFormProps) {
  const [formData, setFormData] = useState({
    name: '',
    description: '',
    price: '',
    meal_type: '–∑–∞–≤—Ç—Ä–∞–∫',
    day_of_week: '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
    weight: '',
    recipe_number: ''
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!formData.name.trim()) {
      alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞');
      return;
    }
    
    // –°–¢–†–û–ì–ê–Ø –í–ê–õ–ò–î–ê–¶–ò–Ø –¢–ò–ü–ê –ü–ò–¢–ê–ù–ò–Ø
    const dishName = formData.name.toLowerCase().trim();
    const selectedMealType = formData.meal_type;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –±–ª—é–¥–∞ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º –ø–∏—Ç–∞–Ω–∏—è
    const validationResult = validateMealTypeCompatibility(dishName, selectedMealType);
    
    if (!validationResult.isValid) {
      alert(`‚ùå –û—à–∏–±–∫–∞: ${validationResult.message}\n\nüí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: ${validationResult.suggestion}`);
      return;
    }
    
    onAdd({
      ...formData,
      price: parseFloat(formData.price) || 0
    });
  };

  // –§–£–ù–ö–¶–ò–Ø –í–ê–õ–ò–î–ê–¶–ò–ò –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –ë–õ–Æ–î–ê –° –¢–ò–ü–û–ú –ü–ò–¢–ê–ù–ò–Ø
  const validateMealTypeCompatibility = (dishName: string, mealType: string) => {
    // –ë–ª—é–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –ù–ò–ö–û–ì–î–ê –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –∑–∞–≤—Ç—Ä–∞–∫–µ
    const notForBreakfast = [
      { pattern: /—Å—É–ø|–±–æ—Ä—â|—â–∏|—Ä–∞—Å—Å–æ–ª—å–Ω–∏–∫/i, suggestion: '–°—É–ø—ã –ø–æ–¥–∞—é—Ç—Å—è –≤ –æ–±–µ–¥' },
      { pattern: /–∫–æ—Ç–ª–µ—Ç|–±–∏—Ç–æ—á–∫|—Ç–µ—Ñ—Ç–µ–ª/i, suggestion: '–ú—è—Å–Ω—ã–µ –±–ª—é–¥–∞ –ø–æ–¥–∞—é—Ç—Å—è –≤ –æ–±–µ–¥' },
      { pattern: /–∫–æ–º–ø–æ—Ç|–∫–∏—Å–µ–ª—å/i, suggestion: '–≠—Ç–∏ –Ω–∞–ø–∏—Ç–∫–∏ –ø–æ–¥–∞—é—Ç—Å—è –≤ –æ–±–µ–¥' },
      { pattern: /—Å–∞–ª–∞—Ç\s+(–æ–≤–æ—â–Ω|–º—è—Å–Ω)/i, suggestion: '–°–∞–ª–∞—Ç—ã –ø–æ–¥–∞—é—Ç—Å—è –≤ –æ–±–µ–¥' }
    ];
    
    // –ë–ª—é–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –ù–ò–ö–û–ì–î–ê –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –æ–±–µ–¥–µ
    const notForLunch = [
      { pattern: /–∫–∞—à–∞\s+–º–æ–ª–æ—á–Ω|–æ–≤—Å—è–Ω/i, suggestion: '–ú–æ–ª–æ—á–Ω—ã–µ –∫–∞—à–∏ –ø–æ–¥–∞—é—Ç—Å—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫' },
      { pattern: /–æ–º–ª–µ—Ç|—è–∏—á–Ω–∏—Ü|—Å—ã—Ä–Ω–∏–∫/i, suggestion: '–Ø–∏—á–Ω—ã–µ –∏ —Ç–≤–æ—Ä–æ–∂–Ω—ã–µ –±–ª—é–¥–∞ –ø–æ–¥–∞—é—Ç—Å—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫' },
      { pattern: /–∫–∞–∫–∞–æ/i, suggestion: '–ö–∞–∫–∞–æ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫' },
      { pattern: /–∫–µ—Ñ–∏—Ä|—Ä—è–∂–µ–Ω–∫|–π–æ–≥—É—Ä—Ç/i, suggestion: '–ö–∏—Å–ª–æ–º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ–¥–∞—é—Ç—Å—è –≤ –ø–æ–ª–¥–Ω–∏–∫' },
      { pattern: /–ø–µ—á–µ–Ω—å|–ø—Ä—è–Ω–∏–∫|–≤–∞—Ñ–ª/i, suggestion: '–°–ª–∞–¥–æ—Å—Ç–∏ –ø–æ–¥–∞—é—Ç—Å—è –≤ –ø–æ–ª–¥–Ω–∏–∫' },
      { pattern: /—Ñ—Ä—É–∫—Ç|—è–≥–æ–¥/i, suggestion: '–§—Ä—É–∫—Ç—ã –ø–æ–¥–∞—é—Ç—Å—è –≤ –ø–æ–ª–¥–Ω–∏–∫' }
    ];
    
    // –ë–ª—é–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –ù–ò–ö–û–ì–î–ê –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –ø–æ–ª–¥–Ω–∏–∫–µ
    const notForSnack = [
      { pattern: /—Å—É–ø|–±–æ—Ä—â|—â–∏/i, suggestion: '–ü–µ—Ä–≤—ã–µ –±–ª—é–¥–∞ –ø–æ–¥–∞—é—Ç—Å—è –≤ –æ–±–µ–¥' },
      { pattern: /–∫–æ—Ç–ª–µ—Ç|–º—è—Å–æ|—Ä—ã–±–∞|–±–∏—Ç–æ—á–∫/i, suggestion: '–ú—è—Å–Ω—ã–µ –∏ —Ä—ã–±–Ω—ã–µ –±–ª—é–¥–∞ –ø–æ–¥–∞—é—Ç—Å—è –≤ –æ–±–µ–¥' },
      { pattern: /–ø—é—Ä–µ|–≥—Ä–µ—á–∫|—Ä–∏—Å\s+–æ—Ç–≤–∞—Ä–Ω/i, suggestion: '–ì–∞—Ä–Ω–∏—Ä—ã –ø–æ–¥–∞—é—Ç—Å—è –≤ –æ–±–µ–¥' },
      { pattern: /–∫–∞—à–∞\s+–º–æ–ª–æ—á–Ω|–æ–º–ª–µ—Ç|—Å—ã—Ä–Ω–∏–∫/i, suggestion: '–≠—Ç–∏ –±–ª—é–¥–∞ –ø–æ–¥–∞—é—Ç—Å—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫' }
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–µ—Ç—ã
    if (mealType === '–∑–∞–≤—Ç—Ä–∞–∫') {
      for (const rule of notForBreakfast) {
        if (rule.pattern.test(dishName)) {
          return {
            isValid: false,
            message: `"${dishName}" –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∑–∞–≤—Ç—Ä–∞–∫–∞`,
            suggestion: rule.suggestion
          };
        }
      }
    }
    
    if (mealType === '–æ–±–µ–¥') {
      for (const rule of notForLunch) {
        if (rule.pattern.test(dishName)) {
          return {
            isValid: false,
            message: `"${dishName}" –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–±–µ–¥–∞`,
            suggestion: rule.suggestion
          };
        }
      }
    }
    
    if (mealType === '–ø–æ–ª–¥–Ω–∏–∫') {
      for (const rule of notForSnack) {
        if (rule.pattern.test(dishName)) {
          return {
            isValid: false,
            message: `"${dishName}" –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–ª–¥–Ω–∏–∫–∞`,
            suggestion: rule.suggestion
          };
        }
      }
    }
    
    return { isValid: true, message: '', suggestion: '' };
  };

  const handleChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  return (
    <form onSubmit={handleSubmit}>
      <div style={{ marginBottom: '15px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
          –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ *
        </label>
        <input
          type="text"
          value={formData.name}
          onChange={(e) => handleChange('name', e.target.value)}
          style={{
            width: '100%',
            padding: '8px',
            border: '1px solid #ddd',
            borderRadius: '4px',
            fontSize: '14px'
          }}
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö–∞—à–∞ –æ–≤—Å—è–Ω–∞—è"
          required
        />
      </div>

      <div style={{ marginBottom: '15px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
          –û–ø–∏—Å–∞–Ω–∏–µ
        </label>
        <input
          type="text"
          value={formData.description}
          onChange={(e) => handleChange('description', e.target.value)}
          style={{
            width: '100%',
            padding: '8px',
            border: '1px solid #ddd',
            borderRadius: '4px',
            fontSize: '14px'
          }}
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –° –º–æ–ª–æ–∫–æ–º –∏ –º–∞—Å–ª–æ–º"
        />
      </div>

      <div style={{ display: 'flex', gap: '10px', marginBottom: '15px' }}>
        <div style={{ flex: 1 }}>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
            –¶–µ–Ω–∞ (—Ä—É–±.)
          </label>
          <input
            type="number"
            value={formData.price}
            onChange={(e) => handleChange('price', e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px',
              fontSize: '14px'
            }}
            placeholder="25"
            min="0"
            step="0.01"
          />
        </div>
        
        <div style={{ flex: 1 }}>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
            –í–µ—Å
          </label>
          <input
            type="text"
            value={formData.weight}
            onChange={(e) => handleChange('weight', e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px',
              fontSize: '14px'
            }}
            placeholder="200–≥"
          />
        </div>
      </div>

      <div style={{ display: 'flex', gap: '10px', marginBottom: '15px' }}>
        <div style={{ flex: 1 }}>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
            –¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è *
          </label>
          <select
            value={formData.meal_type}
            onChange={(e) => handleChange('meal_type', e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px',
              fontSize: '14px'
            }}
            required
          >
            <option value="–∑–∞–≤—Ç—Ä–∞–∫">üåÖ –ó–∞–≤—Ç—Ä–∞–∫</option>
            <option value="–æ–±–µ–¥">üçΩÔ∏è –û–±–µ–¥</option>
            <option value="–ø–æ–ª–¥–Ω–∏–∫">ü•õ –ü–æ–ª–¥–Ω–∏–∫</option>
          </select>
        </div>
        
        <div style={{ flex: 1 }}>
          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
            –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ *
          </label>
          <select
            value={formData.day_of_week}
            onChange={(e) => handleChange('day_of_week', e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px',
              fontSize: '14px'
            }}
            required
          >
            <option value="–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫">–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫</option>
            <option value="–≤—Ç–æ—Ä–Ω–∏–∫">–í—Ç–æ—Ä–Ω–∏–∫</option>
            <option value="—Å—Ä–µ–¥–∞">–°—Ä–µ–¥–∞</option>
            <option value="—á–µ—Ç–≤–µ—Ä–≥">–ß–µ—Ç–≤–µ—Ä–≥</option>
            <option value="–ø—è—Ç–Ω–∏—Ü–∞">–ü—è—Ç–Ω–∏—Ü–∞</option>
          </select>
        </div>
      </div>

      <div style={{ marginBottom: '20px' }}>
        <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>
          –ù–æ–º–µ—Ä —Ä–µ—Ü–µ–ø—Ç–∞
        </label>
        <input
          type="text"
          value={formData.recipe_number}
          onChange={(e) => handleChange('recipe_number', e.target.value)}
          style={{
            width: '100%',
            padding: '8px',
            border: '1px solid #ddd',
            borderRadius: '4px',
            fontSize: '14px'
          }}
          placeholder="–†-123"
        />
      </div>

      <div style={{ display: 'flex', gap: '10px', justifyContent: 'flex-end' }}>
        <button
          type="button"
          onClick={onCancel}
          style={{
            padding: '10px 20px',
            backgroundColor: '#6b7280',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: 'pointer',
            fontSize: '14px'
          }}
        >
          –û—Ç–º–µ–Ω–∞
        </button>
        <button
          type="submit"
          style={{
            padding: '10px 20px',
            backgroundColor: '#10b981',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: 'pointer',
            fontSize: '14px'
          }}
        >
          ‚úÖ –î–æ–±–∞–≤–∏—Ç—å
        </button>
      </div>
    </form>
  );
}
