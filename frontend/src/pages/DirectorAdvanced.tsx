import { useState, useEffect } from "react";
import { apiClient, User, MenuItem, School } from "../utils/api";
import UserManagement from "./UserManagement";
import MenuItemEditor from "../components/MenuItemEditor";
import MenuItemCard from "../components/MenuItemCard";
import StatsDashboard from "../components/StatsDashboard";

export default function DirectorAdvanced({ token: _token }: any) {
  const [file, setFile] = useState<File | null>(null);
  const [msg, setMsg] = useState("");
  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);
  const [loading, setLoading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState(0);
  const [activeTab, setActiveTab] = useState<'menu' | 'users' | 'stats'>('menu');
  const [currentUser, setCurrentUser] = useState<User | null>(null);
  const [_school, setSchool] = useState<School | null>(null);
  const [editingItem, setEditingItem] = useState<MenuItem | null>(null);
  const [showAddForm, setShowAddForm] = useState(false);
  const [menuView, setMenuView] = useState<'grid' | 'list'>('grid');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –≤—Ö–æ–¥–µ
  useEffect(() => {
    loadData();
  }, []);

  async function loadData() {
    try {
      setLoading(true);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = await apiClient.getCurrentUser();
      setCurrentUser(user);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à–∫–æ–ª–µ
      if (user.school_id) {
        const schoolData = await apiClient.getSchool(user.school_id);
        setSchool(schoolData);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é
        const menuData = await apiClient.getMenu();
        setMenuItems(menuData.items);
      }
    } catch (error: any) {
      setMsg(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${error.message}`);
    } finally {
      setLoading(false);
    }
  }

  async function handleFileSelect(e: React.ChangeEvent<HTMLInputElement>) {
    const selectedFile = e.target.files?.[0];
    if (!selectedFile) return;

    setFile(selectedFile);
    setMsg("");

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞
    const validExtensions = ['.xlsx', '.xls'];
    const fileName = selectedFile.name.toLowerCase();
    const isValidFile = validExtensions.some(ext => fileName.endsWith(ext));
    
    if (!isValidFile) {
      setMsg("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª Excel (.xlsx –∏–ª–∏ .xls)");
      return;
    }

    setMsg("‚úÖ –§–∞–π–ª –≤—ã–±—Ä–∞–Ω. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–Ω—é' –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.");
  }

  async function upload(e: React.FormEvent) {
    e.preventDefault();
    setMsg(""); 
    setLoading(true);
    setUploadProgress(0);

    if (!file) {
      setMsg("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª Excel (.xlsx)");
      setLoading(false);
      return;
    }

    try {
      setUploadProgress(25);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const result = await apiClient.uploadMenu(file);
      
      setUploadProgress(75);
      
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é
      const menuData = await apiClient.getMenu();
      setMenuItems(menuData.items);
      
      setUploadProgress(100);
      
      setMsg(`‚úÖ ${result.message}! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${result.itemsCount} –±–ª—é–¥.`);
      
    } catch (error: any) {
      setMsg(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    } finally {
      setLoading(false);
      setUploadProgress(0);
    }
  }

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω—é
  async function handleEditItem(item: MenuItem) {
    setEditingItem(item);
    setShowAddForm(false);
  }

  async function handleDeleteItem(id: number) {
    try {
      await apiClient.deleteMenuItem(id);
      setMenuItems(prev => prev.filter(item => item.id !== id));
      setMsg("‚úÖ –ë–ª—é–¥–æ —É–¥–∞–ª–µ–Ω–æ");
    } catch (error: any) {
      setMsg(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`);
    }
  }

  async function handleSaveItem(data: Omit<MenuItem, 'id' | 'school_id' | 'week_start'>) {
    try {
      if (editingItem) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
        await apiClient.updateMenuItem(editingItem.id, data);
        setMenuItems(prev => prev.map(item => 
          item.id === editingItem.id ? { ...item, ...data } : item
        ));
        setMsg("‚úÖ –ë–ª—é–¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ");
      } else {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        const result = await apiClient.addMenuItem(data);
        const newItem = { ...data, id: result.id, school_id: currentUser?.school_id || 0, week_start: new Date().toISOString().split('T')[0] };
        setMenuItems(prev => [...prev, newItem]);
        setMsg("‚úÖ –ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ");
      }
      
      setEditingItem(null);
      setShowAddForm(false);
    } catch (error: any) {
      setMsg(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`);
    }
  }

  function handleCancelEdit() {
    setEditingItem(null);
    setShowAddForm(false);
  }

  function handleAddNew() {
    setShowAddForm(true);
    setEditingItem(null);
  }

  const dayNames = ["", "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"];

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –±–ª—é–¥–∞ –ø–æ –¥–Ω—è–º –∏ —Ç–∏–ø–∞–º –ø–∏—Ç–∞–Ω–∏—è
  const groupedMenu = menuItems.reduce((acc: any, item: MenuItem) => {
    const key = `${item.day_of_week}-${item.meal_type}`;
    if (!acc[key]) {
      acc[key] = {
        day: dayNames[item.day_of_week] || `–î–µ–Ω—å ${item.day_of_week}`,
        mealType: item.meal_type,
        items: []
      };
    }
    acc[key].items.push(item);
    return acc;
  }, {});

  return (
    <div>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold">–ü–∞–Ω–µ–ª—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞</h2>
        <div className="text-muted">
          {currentUser?.name || '–î–∏—Ä–µ–∫—Ç–æ—Ä —à–∫–æ–ª—ã'}
        </div>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="flex gap-1 mb-6 bg-gray-100 rounded-lg p-1">
        <button
          onClick={() => setActiveTab('menu')}
          className={`flex-1 px-4 py-2 rounded-md text-sm font-medium transition-all ${
            activeTab === 'menu' 
              ? 'bg-white text-gray-900 shadow-sm' 
              : 'text-gray-600 hover:text-gray-900'
          }`}
        >
          üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
        </button>
        <button
          onClick={() => setActiveTab('users')}
          className={`flex-1 px-4 py-2 rounded-md text-sm font-medium transition-all ${
            activeTab === 'users' 
              ? 'bg-white text-gray-900 shadow-sm' 
              : 'text-gray-600 hover:text-gray-900'
          }`}
        >
          üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        </button>
        <button
          onClick={() => setActiveTab('stats')}
          className={`flex-1 px-4 py-2 rounded-md text-sm font-medium transition-all ${
            activeTab === 'stats' 
              ? 'bg-white text-gray-900 shadow-sm' 
              : 'text-gray-600 hover:text-gray-900'
          }`}
        >
          üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        </button>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
      {activeTab === 'users' && currentUser ? (
        <UserManagement 
          currentUser={currentUser}
          onUserCreated={(user) => {
            setMsg(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.name} —Å–æ–∑–¥–∞–Ω`);
          }}
        />
      ) : activeTab === 'stats' && currentUser ? (
        <StatsDashboard currentUser={currentUser} />
      ) : (
        <div>
          {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
          {msg && (
            <div className={`alert ${msg.includes("‚úÖ") ? "alert-success" : "alert-error"} mb-6`}>
              {msg}
            </div>
          )}

          {/* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ */}
          <div className="card mb-6">
            <div className="card-header">
              <h3 className="card-title">üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –º–µ–Ω—é</h3>
            </div>
            <div className="card-body">
              <form onSubmit={upload}>
                <div className="form-group">
                  <label className="form-label">–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª Excel —Å –º–µ–Ω—é:</label>
                  <input 
                    type="file" 
                    accept=".xlsx,.xls"
                    onChange={handleFileSelect}
                    className="input"
                    style={{ border: '2px dashed #d1d5db', backgroundColor: '#f9fafb' }}
                  />
                  <div className="text-muted mt-2">
                    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã .xlsx –∏ .xls
                  </div>
                </div>
                
                <button 
                  type="submit" 
                  disabled={loading || !file}
                  className="btn btn-primary"
                >
                  {loading ? (
                    <>
                      <div className="spinner"></div>
                      –ó–∞–≥—Ä—É–∑–∫–∞...
                    </>
                  ) : (
                    'üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–Ω—é'
                  )}
                </button>
              </form>

              {uploadProgress > 0 && (
                <div className="mt-4">
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="bg-green-600 h-2 rounded-full transition-all duration-300"
                      style={{ width: `${uploadProgress}%` }}
                    />
                  </div>
                  <div className="text-muted text-sm mt-2">
                    {uploadProgress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ
                  </div>
                </div>
              )}
            </div>
          </div>

          {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é */}
          {menuItems.length > 0 && (
            <div className="card mb-6">
              <div className="card-header">
                <div className="flex justify-between items-center">
                  <h3 className="card-title">üìã –¢–µ–∫—É—â–µ–µ –º–µ–Ω—é ({menuItems.length} –±–ª—é–¥)</h3>
                  <div className="flex gap-2">
                    <button
                      onClick={() => setMenuView(menuView === 'grid' ? 'list' : 'grid')}
                      className="btn btn-secondary btn-sm"
                    >
                      {menuView === 'grid' ? 'üìã –°–ø–∏—Å–æ–∫' : 'üî≤ –°–µ—Ç–∫–∞'}
                    </button>
                    <button
                      onClick={handleAddNew}
                      className="btn btn-success btn-sm"
                    >
                      ‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–æ
                    </button>
                  </div>
                </div>
              </div>
              <div className="card-body">

                {menuView === 'grid' ? (
                  <div className="menu-grid">
                    {menuItems.map((item) => (
                      <MenuItemCard
                        key={item.id}
                        item={item}
                        onEdit={handleEditItem}
                        onDelete={handleDeleteItem}
                        showActions={true}
                      />
                    ))}
                  </div>
                ) : (
                  <div className="grid gap-4">
                    {Object.values(groupedMenu).map((group: any) => (
                      <div key={`${group.day}-${group.mealType}`} className="card">
                        <div className="card-header">
                          <h4 className="card-title">
                            {group.day} - {group.mealType}
                          </h4>
                        </div>
                        <div className="card-body">
                          <div className="grid gap-2">
                            {group.items.map((item: MenuItem) => (
                              <MenuItemCard
                                key={item.id}
                                item={item}
                                onEdit={handleEditItem}
                                onDelete={handleDeleteItem}
                                showActions={true}
                              />
                            ))}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          )}

          {/* –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/–¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
          {(editingItem || showAddForm) && (
            <div className="mb-6">
              <MenuItemEditor
                item={editingItem || undefined}
                onSave={handleSaveItem}
                onCancel={handleCancelEdit}
                isEditing={!!editingItem}
              />
            </div>
          )}

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
          <div className="alert alert-info">
            <h4 className="font-semibold mb-2">üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é</h4>
            <ul className="text-sm space-y-1">
              <li>‚Ä¢ –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel (.xlsx –∏–ª–∏ .xls)</li>
              <li>‚Ä¢ –í —Ç–∞–±–ª–∏—Ü–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ (–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –í—Ç–æ—Ä–Ω–∏–∫ –∏ —Ç.–¥.)</li>
              <li>‚Ä¢ –¢–∏–ø—ã –ø–∏—Ç–∞–Ω–∏—è: –ó–∞–≤—Ç—Ä–∞–∫, –û–±–µ–¥, –ü–æ–ª–¥–Ω–∏–∫, –£–∂–∏–Ω, –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≥–∞—Ä–Ω–∏—Ä</li>
              <li>‚Ä¢ –ö–∞–∂–¥–æ–µ –±–ª—é–¥–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —è—á–µ–π–∫–µ</li>
              <li>‚Ä¢ –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: "200–≥") –∏ —Ü–µ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: "150 —Ä—É–±")</li>
              <li>‚Ä¢ –ü–∞—Ä—Å–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã</li>
            </ul>
          </div>
        </div>
      )}
    </div>
  );
}
