import { useState, useEffect } from 'react';
import { apiClient, User, School } from './utils/api';

interface UserManagementProps {
  currentUser: User;
  onUserCreated?: (user: User) => void;
}

export default function UserManagement({ currentUser, onUserCreated }: UserManagementProps) {
  const [users, setUsers] = useState<User[]>([]);
  const [school, setSchool] = useState<School | null>(null);
  const [loading, setLoading] = useState(true);
  const [showCreateForm, setShowCreateForm] = useState(false);
  const [message, setMessage] = useState('');
  const [verifying, setVerifying] = useState<string | null>(null);
  const [deleting, setDeleting] = useState<string | null>(null);
  const [createdUserPassword, setCreatedUserPassword] = useState<string>('');

  // –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [newUser, setNewUser] = useState({
    email: '',
    name: '',
    role: 'PARENT' as 'PARENT' | 'STUDENT',
    password: ''
  });

  // –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è
  const generatePassword = () => {
    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    let password = '';
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –¥–ª–∏–Ω–æ–π 12-16 —Å–∏–º–≤–æ–ª–æ–≤
    const length = 12 + Math.floor(Math.random() * 5);
    
    for (let i = 0; i < length; i++) {
      password += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    
    setNewUser(prev => ({ ...prev, password }));
  };

  useEffect(() => {
    loadData();
  }, [currentUser]);

  const loadData = async () => {
    try {
      setLoading(true);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à–∫–æ–ª–µ (–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –∏–∑-–∑–∞ Railway)
      if (currentUser.school_id) {
        // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ —à–∫–æ–ª—ã
        const mockSchool = {
          id: 1,
          name: 'TOP IT –î–µ–≥—É–Ω–∏–Ω–æ',
          address: '–≥. –ú–æ—Å–∫–≤–∞, –î–µ–≥—É–Ω–∏–Ω–æ',
          director_id: 1
        };
        setSchool(mockSchool);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —à–∫–æ–ª—ã
        const schoolUsers = await apiClient.getSchoolUsers(currentUser.school_id);
        setUsers(schoolUsers);
      }
    } catch (error: any) {
      setMessage(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`);
    } finally {
      setLoading(false);
    }
  };

  const handleCreateUser = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!currentUser.school_id) {
      setMessage('‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ —à–∫–æ–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
      return;
    }

    if (!newUser.email || !newUser.name || !newUser.password) {
      setMessage('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –ø–∞—Ä–æ–ª—å');
      return;
    }

    try {
      setMessage('');
      const userData = {
        ...newUser,
        school_id: currentUser.school_id
      };
      const createdUser = await apiClient.createUser(userData);
      
      setUsers(prev => [...prev, createdUser]);
      setCreatedUserPassword(newUser.password);
      setNewUser({ email: '', name: '', role: 'PARENT', password: '' });
      setShowCreateForm(false);
      setMessage(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${createdUser.name} —Å–æ–∑–¥–∞–Ω. –ü–∞—Ä–æ–ª—å: ${newUser.password}`);
      
      if (onUserCreated) {
        onUserCreated(createdUser);
      }
    } catch (error: any) {
      setMessage(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
    }
  };

  const handleVerifyUser = async (userId: number) => {
    try {
      setVerifying(userId.toString());
      setMessage('');
      
      await apiClient.verifyUser(userId);
      setUsers(prev => prev.map(u => u.id === userId ? { ...u, verified: true } : u));
      setMessage(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω`);
    } catch (error: any) {
      setMessage(`‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${error.message}`);
    } finally {
      setVerifying(null);
    }
  };

  const handleDeleteUser = async (userId: number, userName: string) => {
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${userName}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`)) {
      return;
    }

    try {
      setDeleting(userId.toString());
      setMessage('');
      
      await apiClient.deleteUser(userId);
      setUsers(prev => prev.filter(u => u.id !== userId));
      setMessage(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${userName}" —É–¥–∞–ª–µ–Ω`);
    } catch (error: any) {
      setMessage(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`);
    } finally {
      setDeleting(null);
    }
  };

  if (loading) {
    return (
      <div style={{ padding: '40px', textAlign: 'center' }}>
        <div style={{ fontSize: '24px', marginBottom: '20px' }}>‚è≥</div>
        <div>–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...</div>
      </div>
    );
  }

  return (
    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>
      <div style={{ 
        display: 'flex', 
        justifyContent: 'space-between', 
        alignItems: 'center', 
        marginBottom: '20px' 
      }}>
        <h2>üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h2>
        <button
          onClick={() => setShowCreateForm(true)}
          style={{
            background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',
            color: 'white',
            padding: '10px 20px',
            border: 'none',
            borderRadius: '8px',
            cursor: 'pointer',
            fontSize: '14px',
            fontWeight: '600'
          }}
        >
          ‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        </button>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∫–æ–ª–µ */}
      {school && (
        <div style={{
          background: 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',
          color: 'white',
          padding: '20px',
          borderRadius: '12px',
          marginBottom: '20px'
        }}>
          <h3 style={{ margin: '0 0 10px 0' }}>üè´ {school.name}</h3>
          <p style={{ margin: 0, opacity: 0.9 }}>{school.address}</p>
        </div>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
      {message && (
        <div style={{
          padding: '12px',
          borderRadius: '8px',
          marginBottom: '20px',
          backgroundColor: message.includes('‚úÖ') ? '#d1fae5' : '#fee2e2',
          color: message.includes('‚úÖ') ? '#065f46' : '#991b1b',
          fontSize: '14px'
        }}>
          {message}
        </div>
      )}

      {/* –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {showCreateForm && (
        <div style={{
          background: 'white',
          border: '1px solid #e5e7eb',
          borderRadius: '12px',
          padding: '20px',
          marginBottom: '20px',
          boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'
        }}>
          <h3 style={{ margin: '0 0 20px 0' }}>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h3>
          
          <form onSubmit={handleCreateUser}>
            <div style={{ display: 'grid', gap: '15px', marginBottom: '20px' }}>
              <div>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600' }}>
                  Email
                </label>
                <input
                  type="email"
                  value={newUser.email}
                  onChange={(e) => setNewUser(prev => ({ ...prev, email: e.target.value }))}
                  required
                  style={{
                    width: '100%',
                    padding: '10px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    fontSize: '14px'
                  }}
                />
              </div>
              
              <div>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600' }}>
                  –§–ò–û
                </label>
                <input
                  type="text"
                  value={newUser.name}
                  onChange={(e) => setNewUser(prev => ({ ...prev, name: e.target.value }))}
                  required
                  style={{
                    width: '100%',
                    padding: '10px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    fontSize: '14px'
                  }}
                />
              </div>
              
              <div>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600' }}>
                  –†–æ–ª—å
                </label>
                <select
                  value={newUser.role}
                  onChange={(e) => setNewUser(prev => ({ ...prev, role: e.target.value as 'PARENT' | 'STUDENT' }))}
                  style={{
                    width: '100%',
                    padding: '10px',
                    border: '1px solid #d1d5db',
                    borderRadius: '6px',
                    fontSize: '14px'
                  }}
                >
                  <option value="PARENT">–†–æ–¥–∏—Ç–µ–ª—å</option>
                  <option value="STUDENT">–£—á–µ–Ω–∏–∫</option>
                </select>
              </div>

              <div>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600' }}>
                  –ü–∞—Ä–æ–ª—å
                </label>
                <div style={{ display: 'flex', gap: '10px' }}>
                  <input
                    type="text"
                    value={newUser.password}
                    onChange={(e) => setNewUser(prev => ({ ...prev, password: e.target.value }))}
                    placeholder="–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –ø–∞—Ä–æ–ª—å"
                    readOnly
                    style={{
                      flex: 1,
                      padding: '10px',
                      border: '1px solid #d1d5db',
                      borderRadius: '6px',
                      fontSize: '14px',
                      backgroundColor: '#f9fafb'
                    }}
                  />
                  <button
                    type="button"
                    onClick={generatePassword}
                    style={{
                      padding: '10px 15px',
                      backgroundColor: '#3b82f6',
                      color: 'white',
                      border: 'none',
                      borderRadius: '6px',
                      fontSize: '14px',
                      cursor: 'pointer',
                      fontWeight: '600'
                    }}
                  >
                    üîë –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                </div>
                <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>
                  –ü–∞—Ä–æ–ª—å –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å 12-16 —Å–∏–º–≤–æ–ª–æ–≤ (–±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)
                </div>
              </div>
            </div>
            
            <div style={{ display: 'flex', gap: '10px' }}>
              <button
                type="submit"
                style={{
                  background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',
                  color: 'white',
                  padding: '10px 20px',
                  border: 'none',
                  borderRadius: '6px',
                  cursor: 'pointer',
                  fontSize: '14px',
                  fontWeight: '600'
                }}
              >
                –°–æ–∑–¥–∞—Ç—å
              </button>
              
              <button
                type="button"
                onClick={() => setShowCreateForm(false)}
                style={{
                  background: '#6b7280',
                  color: 'white',
                  padding: '10px 20px',
                  border: 'none',
                  borderRadius: '6px',
                  cursor: 'pointer',
                  fontSize: '14px',
                  fontWeight: '600'
                }}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </form>
        </div>
      )}

      {/* –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <div style={{
        background: 'white',
        border: '1px solid #e5e7eb',
        borderRadius: '12px',
        overflow: 'hidden'
      }}>
        <div style={{
          background: '#f9fafb',
          padding: '15px 20px',
          borderBottom: '1px solid #e5e7eb'
        }}>
          <h3 style={{ margin: 0, fontSize: '16px' }}>
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —à–∫–æ–ª—ã ({users.length})
          </h3>
        </div>
        
        {users.length === 0 ? (
          <div style={{ padding: '40px', textAlign: 'center', color: '#6b7280' }}>
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
          </div>
        ) : (
          <div style={{ maxHeight: '500px', overflow: 'auto' }}>
            {users.map((user) => (
              <div
                key={user.id}
                style={{
                  padding: '15px 20px',
                  borderBottom: '1px solid #f3f4f6',
                  display: 'flex',
                  justifyContent: 'space-between',
                  alignItems: 'center'
                }}
              >
                <div>
                  <div style={{ fontWeight: '600', marginBottom: '4px' }}>
                    {user.name}
                  </div>
                  <div style={{ fontSize: '14px', color: '#6b7280', marginBottom: '4px' }}>
                    {user.email}
                  </div>
                  <div style={{ fontSize: '12px', color: '#9ca3af' }}>
                    {user.role === 'DIRECTOR' ? '–î–∏—Ä–µ–∫—Ç–æ—Ä' : 
                     user.role === 'PARENT' ? '–†–æ–¥–∏—Ç–µ–ª—å' : '–£—á–µ–Ω–∏–∫'}
                  </div>
                </div>
                
                <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
                  {!user.verified ? (
                    <button
                      onClick={() => handleVerifyUser(user.id)}
                      disabled={verifying === user.id.toString()}
                      style={{
                        background: verifying === user.id.toString() ? '#9ca3af' : '#f59e0b',
                        color: 'white',
                        padding: '6px 12px',
                        border: 'none',
                        borderRadius: '6px',
                        cursor: verifying === user.id.toString() ? 'not-allowed' : 'pointer',
                        fontSize: '12px',
                        fontWeight: '600'
                      }}
                    >
                      {verifying === user.id.toString() ? '‚è≥' : '‚úì'} –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                  ) : (
                    <span style={{
                      background: '#d1fae5',
                      color: '#065f46',
                      padding: '6px 12px',
                      borderRadius: '6px',
                      fontSize: '12px',
                      fontWeight: '600'
                    }}>
                      ‚úì –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
                    </span>
                  )}
                  
                  {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è - —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ-–¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤ */}
                  {user.role !== 'DIRECTOR' && user.id !== currentUser.id && (
                    <button
                      onClick={() => handleDeleteUser(user.id, user.name)}
                      disabled={deleting === user.id.toString()}
                      style={{
                        background: deleting === user.id.toString() ? '#9ca3af' : '#ef4444',
                        color: 'white',
                        padding: '6px 12px',
                        border: 'none',
                        borderRadius: '6px',
                        cursor: deleting === user.id.toString() ? 'not-allowed' : 'pointer',
                        fontSize: '12px',
                        fontWeight: '600'
                      }}
                    >
                      {deleting === user.id.toString() ? '‚è≥' : 'üóëÔ∏è'} –£–¥–∞–ª–∏—Ç—å
                    </button>
                  )}
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div style={{
        marginTop: '20px',
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
        gap: '15px'
      }}>
        <div style={{
          background: 'white',
          border: '1px solid #e5e7eb',
          borderRadius: '8px',
          padding: '15px',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#3b82f6' }}>
            {users.length}
          </div>
          <div style={{ fontSize: '14px', color: '#6b7280' }}>
            –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          </div>
        </div>
        
        <div style={{
          background: 'white',
          border: '1px solid #e5e7eb',
          borderRadius: '8px',
          padding: '15px',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#10b981' }}>
            {users.filter(u => u.verified).length}
          </div>
          <div style={{ fontSize: '14px', color: '#6b7280' }}>
            –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
          </div>
        </div>
        
        <div style={{
          background: 'white',
          border: '1px solid #e5e7eb',
          borderRadius: '8px',
          padding: '15px',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#f59e0b' }}>
            {users.filter(u => !u.verified).length}
          </div>
          <div style={{ fontSize: '14px', color: '#6b7280' }}>
            –û–∂–∏–¥–∞—é—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
          </div>
        </div>
      </div>
    </div>
  );
}
