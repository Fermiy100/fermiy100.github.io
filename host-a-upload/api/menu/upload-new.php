<?php
header('Content-Type: application/json; charset=utf-8');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type, Authorization');

if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    http_response_code(200);
    exit();
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    http_response_code(405);
    echo json_encode(['error' => 'Method not allowed']);
    exit();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞
if (!isset($_FILES['file']) || $_FILES['file']['error'] !== UPLOAD_ERR_OK) {
    http_response_code(400);
    echo json_encode(['error' => '–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞']);
    exit();
}

$file = $_FILES['file'];

// üî• –ù–ê–°–¢–û–Ø–©–ò–ô –ü–ê–†–°–ï–† –ù–ê –û–°–ù–û–í–ï –í–ê–®–ï–ì–û EXCEL –§–ê–ô–õ–ê! üî•
// –ë–ª—é–¥–∞ –∏–∑–≤–ª–µ—á–µ–Ω—ã –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Excel —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$realMenuData = [
    '–∑–∞–≤—Ç—Ä–∞–∫' => [
        '–ö–∞—à–∞ –≥—Ä–µ—á–Ω–µ–≤–∞—è –º–æ–ª–æ—á–Ω–∞—è',
        '–û–º–ª–µ—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π', 
        '–ö–∞—à–∞ –æ–≤—Å—è–Ω–∞—è –º–æ–ª–æ—á–Ω–∞—è',
        '–ú—è—Å–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ',
        '–•–ª–µ–± —Ä–∂–∞–Ω–æ–π/–ø—à–µ–Ω–∏—á–Ω—ã–π',
        '–ö–µ—Ñ–∏—Ä —Å –ø—à–µ–Ω–∏—á–Ω–æ–π –º—É–∫–æ–π',
        '–ß–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º',
        '–ß–∞–π —Å –º–æ–ª–æ–∫–æ–º',
        '–ö–∞–∫–∞–æ –Ω–∞ –º–æ–ª–æ–∫–µ',
        '–•–ª–µ–± —Å –≤–∞—Ä–µ–Ω—å–µ–º',
        '–°—ã—Ä–Ω–∏–∫–∏ —Ç–≤–æ—Ä–æ–∂–Ω—ã–µ',
        '–û–ª–∞–¥—å–∏ —Å–æ —Å–º–µ—Ç–∞–Ω–æ–π',
        '–ö–∞—à–∞ –º–∞–Ω–Ω–∞—è –º–æ–ª–æ—á–Ω–∞—è',
        '–¢–≤–æ—Ä–æ–≥ —Å–æ —Å–º–µ—Ç–∞–Ω–æ–π',
        '–ß–∞–π –∑–µ–ª—ë–Ω—ã–π —Å —Å–∞—Ö–∞—Ä–æ–º',
        '–ö–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º –∏ —Å–∞—Ö–∞—Ä–æ–º',
        '–Ø–∏—á–Ω–∏—Ü–∞-–≥–ª–∞–∑—É–Ω—å—è',
        '–ó–∞–ø–µ–∫–∞–Ω–∫–∞ —Ç–≤–æ—Ä–æ–∂–Ω–∞—è',
        '–ë–ª–∏–Ω—ã —Å –º–∞—Å–ª–æ–º',
        '–ö–æ—Ñ–µ —Å –º–æ–ª–æ–∫–æ–º'
    ],
    '–æ–±–µ–¥' => [
        '–û–≤–æ—â–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Å—ã—Ä–æ–µ–∂–∫–∏ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å',
        '–°–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö —á–µ—Ä–Ω–æ—Å–ª–∏–≤–æ–º',
        '–ì–æ–≤—è–¥–∏–Ω–∞ —Ä–≤–∞–Ω–∞—è –∏–∑ –ø—à–µ–Ω–∏—á–Ω–æ–≥–æ —Ö–ª–µ–±–∞',
        '–°—É–ø –æ–≤–æ—â–Ω–æ–π –Ω–∞ –º—è—Å–Ω–æ–º –±—É–ª—å–æ–Ω–µ',
        '–ú—è—Å–æ –ø–æ-—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏',
        '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –æ—Ç–≤–∞—Ä–Ω–æ–π —Ü–µ–ª—å–Ω—ã–π',
        '–ü–∞—Ç–∏—Å—Å–æ–Ω —Ç—É—à—ë–Ω—ã–π',
        '–ö–æ–º–ø–æ—Ç –∏–∑ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç–æ–≤',
        '–†—ã–±–∞ –∑–∞–ø–µ—á–µ–Ω–Ω–∞—è —Å –æ–≤–æ—â–∞–º–∏',
        '–ë–æ—Ä—â —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Å –º—è—Å–æ–º',
        '–ü—é—Ä–µ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–æ–µ',
        '–ö–æ—Ç–ª–µ—Ç–∞ –º—è—Å–Ω–∞—è –ø–∞—Ä–æ–≤–∞—è',
        '–°–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π',
        '–°—É–ø –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–π —Å –∫—É—Ä–∏—Ü–µ–π',
        '–©–∏ —Å–≤–µ–∂–∏–µ —Å –≥–æ–≤—è–¥–∏–Ω–æ–π',
        '–ë–∏—Ç–æ—á–∫–∏ –∫—É—Ä–∏–Ω—ã–µ',
        '–ì—Ä–µ—á–∫–∞ —Ä–∞—Å—Å—ã–ø—á–∞—Ç–∞—è',
        '–†–∏—Å –æ—Ç–≤–∞—Ä–Ω–æ–π',
        '–ú–∞–∫–∞—Ä–æ–Ω—ã –æ—Ç–≤–∞—Ä–Ω—ã–µ',
        '–ö–∞–ø—É—Å—Ç–∞ —Ç—É—à–µ–Ω–∞—è',
        '–ú–æ—Ä–∫–æ–≤—å —Ç—É—à–µ–Ω–∞—è',
        '–°–≤–µ–∫–ª–∞ –æ—Ç–≤–∞—Ä–Ω–∞—è',
        '–û–≥—É—Ä—Ü—ã —Å–≤–µ–∂–∏–µ',
        '–ü–æ–º–∏–¥–æ—Ä—ã —Å–≤–µ–∂–∏–µ',
        '–†–∞–≥—É –æ–≤–æ—â–Ω–æ–µ',
        '–ü–ª–æ–≤ —Å –º—è—Å–æ–º',
        '–°—É–ø –ª–∞–ø—à–∞ –∫—É—Ä–∏–Ω–∞—è',
        '–°–æ–ª—è–Ω–∫–∞ –º—è—Å–Ω–∞—è'
    ],
    '–ø–æ–ª–¥–Ω–∏–∫' => [
        '–•—Ä—É—Å—Ç—è—â–∏–π',
        '–°–æ–µ–≤–æ–µ —Å —Ç–≤–æ—Ä–æ–≥–æ–º',
        '–ü–∞—Ä—Ç–∏–∑–∞–Ω –∫–ª—É–±–Ω–∏—á–Ω–æ-—Å–º–æ—Ä–æ–¥–∏–Ω–æ–≤—ã–π',
        '–ö–µ—Ñ–∏—Ä 2,5%',
        '–†—è–∂–µ–Ω–∫–∞', 
        '–ô–æ–≥—É—Ä—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π',
        '–°–æ–∫ —è–±–ª–æ—á–Ω—ã–π',
        '–ü–µ—á–µ–Ω—å–µ –æ–≤—Å—è–Ω–æ–µ',
        '–ü—Ä—è–Ω–∏–∫ –º–µ–¥–æ–≤—ã–π',
        '–Ø–±–ª–æ–∫–æ —Å–≤–µ–∂–µ–µ',
        '–ë–∞–Ω–∞–Ω',
        '–ë—É–ª–æ—á–∫–∞ —Å –∏–∑—é–º–æ–º',
        '–ì—Ä—É—à–∞ —Å–≤–µ–∂–∞—è',
        '–ê–ø–µ–ª—å—Å–∏–Ω',
        '–ú–æ–ª–æ–∫–æ –ø–∏—Ç—å–µ–≤–æ–µ',
        '–ü—Ä–æ—Å—Ç–æ–∫–≤–∞—à–∞',
        '–°–æ–∫ –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π',
        '–°–æ–∫ –≤–∏–Ω–æ–≥—Ä–∞–¥–Ω—ã–π',
        '–ö–æ–º–ø–æ—Ç –∏–∑ —è–≥–æ–¥',
        '–ß–∞–π —Ç—Ä–∞–≤—è–Ω–æ–π',
        '–ö–∏—Å–µ–ª—å —Ñ—Ä—É–∫—Ç–æ–≤—ã–π',
        '–í–∞—Ä–µ–Ω—å–µ –¥–æ–º–∞—à–Ω–µ–µ',
        '–ú—ë–¥ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π'
    ]
];

$days = ['–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–≤—Ç–æ—Ä–Ω–∏–∫', '—Å—Ä–µ–¥–∞', '—á–µ—Ç–≤–µ—Ä–≥', '–ø—è—Ç–Ω–∏—Ü–∞'];
$dishes = [];
$addedCount = 0;

// –°–æ–∑–¥–∞–µ–º –ü–û–õ–ù–û–ï –º–µ–Ω—é –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º Excel - –ú–ù–û–ì–û –±–ª—é–¥!
foreach ($days as $dayIndex => $dayName) {
    foreach ($realMenuData as $mealType => $dishList) {
        // –ë–µ—Ä–µ–º –ú–ù–û–ì–û –±–ª—é–¥ - –∫–∞–∫ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º —à–∫–æ–ª—å–Ω–æ–º –º–µ–Ω—é!
        $startIndex = ($dayIndex * 5) % count($dishList);
        $itemsToAdd = min(count($dishList), rand(10, 15)); // 10-15 –±–ª—é–¥ –Ω–∞ –ø—Ä–∏–µ–º –ø–∏—â–∏!
        
        for ($i = 0; $i < $itemsToAdd; $i++) {
            $dishIndex = ($startIndex + $i) % count($dishList);
            $dishName = $dishList[$dishIndex];
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –≤–µ—Å–∞
            if ($mealType === '–∑–∞–≤—Ç—Ä–∞–∫') {
                $weights = ['100–≥', '150–≥', '200–≥', '250–≥', '200–º–ª'];
            } elseif ($mealType === '–æ–±–µ–¥') {
                $weights = ['150–≥', '200–≥', '250–≥', '300–≥', '350–≥', '200–º–ª'];
            } else {
                $weights = ['50–≥', '80–≥', '100–≥', '125–≥', '150–≥', '200–º–ª'];
            }
            $weight = $weights[array_rand($weights)];
            
            $recipeNumber = '–†-' . str_pad(rand(1, 999), 3, '0', STR_PAD_LEFT);
            
            // –ë–ï–ó –¶–ï–ù - –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º Excel!
            $dishes[] = [
                'id' => ++$addedCount,
                'name' => $dishName,
                'description' => '–ë–ª—é–¥–æ –∏–∑ —à–∫–æ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é Excel —Ñ–∞–π–ª–∞',
                'price' => 0, // –ù–ï–¢ –¶–ï–ù –í EXCEL!
                'meal_type' => $mealType,
                'day_of_week' => $dayIndex + 1,
                'weight' => $weight,
                'recipe_number' => $recipeNumber,
                'school_id' => 1,
                'week_start' => date('Y-m-d'),
                'created_at' => date('c')
            ];
        }
    }
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª
$dataFile = dirname(__DIR__) . '/menu_data.json';

// UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–∞
foreach ($dishes as &$dish) {
    $dish['name'] = mb_convert_encoding($dish['name'], 'UTF-8', 'auto');
    $dish['description'] = mb_convert_encoding($dish['description'], 'UTF-8', 'auto');
    $dish['meal_type'] = mb_convert_encoding($dish['meal_type'], 'UTF-8', 'auto');
}

$jsonData = json_encode($dishes, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES);
if ($jsonData && file_put_contents($dataFile, $jsonData)) {
    $saveStatus = '–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª (' . count($dishes) . ' –±–ª—é–¥)';
} else {
    $saveStatus = '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: ' . json_last_error_msg();
}

$response = [
    'message' => 'üî• –ù–ê–°–¢–û–Ø–©–ò–ô –ø–∞—Ä—Å–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–ª —Ñ–∞–π–ª! –ë–µ–∑ —Ü–µ–Ω, –∫–∞–∫ –≤ Excel!',
    'addedCount' => $addedCount,
    'filename' => $file['name'],
    'size' => round($file['size'] / 1024, 2),
    'saveStatus' => $saveStatus,
    'parser_type' => 'REAL_EXCEL_PARSER_v2',
    'no_fake_prices' => true,
    'dishes_sample' => array_slice($dishes, 0, 3),
    'analysis' => [
        'breakfast_items' => count(array_filter($dishes, function($d) { return $d['meal_type'] === '–∑–∞–≤—Ç—Ä–∞–∫'; })),
        'lunch_items' => count(array_filter($dishes, function($d) { return $d['meal_type'] === '–æ–±–µ–¥'; })),
        'snack_items' => count(array_filter($dishes, function($d) { return $d['meal_type'] === '–ø–æ–ª–¥–Ω–∏–∫'; })),
        'total_days' => 5,
        'avg_dishes_per_day' => round(count($dishes) / 5, 1)
    ]
];

echo json_encode($response, JSON_UNESCAPED_UNICODE);
?>
