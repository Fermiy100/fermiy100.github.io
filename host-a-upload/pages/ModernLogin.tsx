import React, { useState } from 'react';
import { apiClient, User } from '../utils/api';

interface LoginProps {
  onLogin: (user: User) => void;
}

interface RegisterData {
  login: string;
  fullName: string;
  password: string;
  confirmPassword: string;
}

export default function ModernLogin({ onLogin }: LoginProps) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [showRegister, setShowRegister] = useState(false);
  const [registerData, setRegisterData] = useState<RegisterData>({
    login: '',
    fullName: '',
    password: '',
    confirmPassword: ''
  });

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!email || !password) {
      setError('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }

    try {
      setLoading(true);
      setError('');
      
      const user = await apiClient.login(email, password);
      onLogin(user);
    } catch (error: any) {
      setError(error.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
    } finally {
      setLoading(false);
    }
  };

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!registerData.login || !registerData.fullName || !registerData.password) {
      setError('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }
    
    if (registerData.password !== registerData.confirmPassword) {
      setError('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      return;
    }
    
    if (registerData.password.length < 6) {
      setError('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');
      return;
    }

    if (registerData.login.length < 3) {
      setError('–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞');
      return;
    }

    try {
      setLoading(true);
      setError('');
      
      // –°–æ–∑–¥–∞–µ–º email –∏–∑ –ª–æ–≥–∏–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å API
      const email = `${registerData.login}@school.local`;
      
      const user = await apiClient.createUser({
        name: registerData.fullName,
        email: email,
        password: registerData.password,
        role: 'PARENT' // –¢–æ–ª—å–∫–æ —Ä–æ–¥–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
      });
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      const loginUser = await apiClient.login(email, registerData.password);
      onLogin(loginUser);
    } catch (error: any) {
      setError(error.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{
      minHeight: '100vh',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      padding: '20px'
    }}>
      <div style={{
        background: 'white',
        borderRadius: '20px',
        padding: '40px',
        boxShadow: '0 20px 40px rgba(0,0,0,0.1)',
        width: '100%',
        maxWidth: '450px'
      }}>
        <div style={{ textAlign: 'center', marginBottom: '30px' }}>
          <div style={{ fontSize: '4rem', marginBottom: '20px' }}>üçΩÔ∏è</div>
          <h1 style={{ margin: 0, color: '#333', fontSize: '2rem' }}>
            –®–∫–æ–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
          </h1>
          <p style={{ color: '#666', margin: '10px 0 0 0' }}>
            –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–∞ —à–∫–æ–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è
          </p>
        </div>

        {!showRegister ? (
          // –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
          <form onSubmit={handleLogin}>
            <div style={{ marginBottom: '20px' }}>
              <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', color: '#333' }}>
                üìß Email –∏–ª–∏ –ª–æ–≥–∏–Ω:
              </label>
              <input
                type="text"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                style={{
                  width: '100%',
                  padding: '12px',
                  border: '1px solid #ddd',
                  borderRadius: '8px',
                  fontSize: '1rem',
                  boxSizing: 'border-box'
                }}
                placeholder="–í–≤–µ–¥–∏—Ç–µ email –∏–ª–∏ –ª–æ–≥–∏–Ω"
              />
            </div>

            <div style={{ marginBottom: '20px' }}>
              <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', color: '#333' }}>
                üîí –ü–∞—Ä–æ–ª—å:
              </label>
              <input
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                style={{
                  width: '100%',
                  padding: '12px',
                  border: '1px solid #ddd',
                  borderRadius: '8px',
                  fontSize: '1rem',
                  boxSizing: 'border-box'
                }}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              />
            </div>

            {error && (
              <div style={{
                background: '#f8d7da',
                color: '#721c24',
                padding: '10px',
                borderRadius: '5px',
                marginBottom: '20px',
                border: '1px solid #f5c6cb'
              }}>
                ‚ùå {error}
              </div>
            )}

            <button
              type="submit"
              disabled={loading}
              style={{
                width: '100%',
                background: loading ? '#6c757d' : '#007bff',
                color: 'white',
                border: 'none',
                padding: '12px',
                borderRadius: '8px',
                fontSize: '1.1rem',
                cursor: loading ? 'not-allowed' : 'pointer',
                opacity: loading ? 0.6 : 1,
                marginBottom: '20px'
              }}
            >
              {loading ? '‚è≥ –í—Ö–æ–¥...' : 'üö™ –í–æ–π—Ç–∏'}
            </button>

            <div style={{ textAlign: 'center' }}>
              <button
                type="button"
                onClick={() => setShowRegister(true)}
                style={{
                  background: 'none',
                  border: 'none',
                  color: '#007bff',
                  cursor: 'pointer',
                  textDecoration: 'underline',
                  fontSize: '1rem'
                }}
              >
                üìù –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
              </button>
            </div>
          </form>
        ) : (
          // –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–∞–∫ –≤ –Ø–Ω–¥–µ–∫—Å.–£—á–µ–±–Ω–∏–∫–µ/–£—á–∏.—Ä—É)
          <form onSubmit={handleRegister}>
            <div style={{ marginBottom: '20px' }}>
              <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', color: '#333' }}>
                üë§ –õ–æ–≥–∏–Ω:
              </label>
              <input
                type="text"
                value={registerData.login}
                onChange={(e) => setRegisterData({...registerData, login: e.target.value})}
                style={{
                  width: '100%',
                  padding: '12px',
                  border: '1px solid #ddd',
                  borderRadius: '8px',
                  fontSize: '1rem',
                  boxSizing: 'border-box'
                }}
                placeholder="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ª–æ–≥–∏–Ω (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)"
              />
              <small style={{ color: '#666', fontSize: '0.8rem' }}>
                –õ–æ–≥–∏–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
              </small>
            </div>

            <div style={{ marginBottom: '20px' }}>
              <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', color: '#333' }}>
                üìù –§–ò–û:
              </label>
              <input
                type="text"
                value={registerData.fullName}
                onChange={(e) => setRegisterData({...registerData, fullName: e.target.value})}
                style={{
                  width: '100%',
                  padding: '12px',
                  border: '1px solid #ddd',
                  borderRadius: '8px',
                  fontSize: '1rem',
                  boxSizing: 'border-box'
                }}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é, –∏–º—è, –æ—Ç—á–µ—Å—Ç–≤–æ"
              />
            </div>

            <div style={{ marginBottom: '20px' }}>
              <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', color: '#333' }}>
                üîí –ü–∞—Ä–æ–ª—å:
              </label>
              <input
                type="password"
                value={registerData.password}
                onChange={(e) => setRegisterData({...registerData, password: e.target.value})}
                style={{
                  width: '100%',
                  padding: '12px',
                  border: '1px solid #ddd',
                  borderRadius: '8px',
                  fontSize: '1rem',
                  boxSizing: 'border-box'
                }}
                placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
              />
            </div>

            <div style={{ marginBottom: '20px' }}>
              <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', color: '#333' }}>
                üîí –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:
              </label>
              <input
                type="password"
                value={registerData.confirmPassword}
                onChange={(e) => setRegisterData({...registerData, confirmPassword: e.target.value})}
                style={{
                  width: '100%',
                  padding: '12px',
                  border: '1px solid #ddd',
                  borderRadius: '8px',
                  fontSize: '1rem',
                  boxSizing: 'border-box'
                }}
                placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              />
            </div>

            <div style={{ 
              marginBottom: '20px', 
              padding: '15px', 
              background: '#e3f2fd', 
              borderRadius: '8px',
              border: '1px solid #bbdefb'
            }}>
              <div style={{ display: 'flex', alignItems: 'center', marginBottom: '5px' }}>
                <span style={{ fontSize: '1.2rem', marginRight: '8px' }}>üë®‚Äçüë©‚Äçüëß‚Äçüë¶</span>
                <strong style={{ color: '#1976d2' }}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –†–æ–¥–∏—Ç–µ–ª—å</strong>
              </div>
              <small style={{ color: '#666' }}>
                –†–æ–¥–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è —Å–≤–æ–∏—Ö –¥–µ—Ç–µ–π
              </small>
            </div>

            {error && (
              <div style={{
                background: '#f8d7da',
                color: '#721c24',
                padding: '10px',
                borderRadius: '5px',
                marginBottom: '20px',
                border: '1px solid #f5c6cb'
              }}>
                ‚ùå {error}
              </div>
            )}

            <button
              type="submit"
              disabled={loading}
              style={{
                width: '100%',
                background: loading ? '#6c757d' : '#28a745',
                color: 'white',
                border: 'none',
                padding: '12px',
                borderRadius: '8px',
                fontSize: '1.1rem',
                cursor: loading ? 'not-allowed' : 'pointer',
                opacity: loading ? 0.6 : 1,
                marginBottom: '20px'
              }}
            >
              {loading ? '‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞...' : 'üìù –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
            </button>

            <div style={{ textAlign: 'center' }}>
              <button
                type="button"
                onClick={() => setShowRegister(false)}
                style={{
                  background: 'none',
                  border: 'none',
                  color: '#007bff',
                  cursor: 'pointer',
                  textDecoration: 'underline',
                  fontSize: '1rem'
                }}
              >
                üö™ –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π—Ç–∏
              </button>
            </div>
          </form>
        )}

        {/* –î–µ–º–æ –∞–∫–∫–∞—É–Ω—Ç—ã */}
        <div style={{
          marginTop: '30px',
          padding: '20px',
          background: '#f8f9fa',
          borderRadius: '10px',
          border: '1px solid #e9ecef'
        }}>
          <h3 style={{ margin: '0 0 15px 0', color: '#333', fontSize: '1.1rem' }}>
            üé≠ –î–µ–º–æ –∞–∫–∫–∞—É–Ω—Ç—ã:
          </h3>
          <div style={{ fontSize: '0.9rem', color: '#666' }}>
            <p style={{ margin: '5px 0' }}>
              <strong>–î–∏—Ä–µ–∫—Ç–æ—Ä:</strong> director@school.test / password123
            </p>
            <p style={{ margin: '5px 0' }}>
              <strong>–†–æ–¥–∏—Ç–µ–ª—å:</strong> parent@school.test / password123
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}
