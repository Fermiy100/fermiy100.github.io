#!/usr/bin/env node

/**
 * üö® ULTIMATE FORCE UPDATE RAILWAY v5.0.0 üö®
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç Railway –¥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
 */

const http = require('http');

console.log('üö® –ó–ê–ü–£–°–ö ULTIMATE FORCE UPDATE RAILWAY v5.0.0...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTTP –∑–∞–ø—Ä–æ—Å–∞
function makeRequest(url, options = {}) {
    return new Promise((resolve, reject) => {
        const req = http.request(url, options, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                try {
                    const jsonData = JSON.parse(data);
                    resolve({ status: res.statusCode, data: jsonData });
                } catch (e) {
                    resolve({ status: res.statusCode, data: data });
                }
            });
        });
        
        req.on('error', reject);
        
        if (options.body) {
            req.write(options.body);
        }
        
        req.end();
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
async function ultimateForceUpdate() {
    const railwayUrl = 'https://fermiy100githubio-production.up.railway.app';
    
    try {
        console.log('üì° –ü—Ä–æ–≤–µ—Ä—è—é —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Railway...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
        const statusResponse = await makeRequest(`${railwayUrl}/`);
        console.log('üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:', statusResponse.data);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
        if (statusResponse.data.message && statusResponse.data.message.includes('v5.0.0')) {
            console.log('‚úÖ Railway —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ v5.0.0!');
            return;
        }
        
        console.log('‚ùå Railway –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω! –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è:', statusResponse.data.message);
        
        // –û—á–∏—â–∞–µ–º –º–µ–Ω—é –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        console.log('üóëÔ∏è –û—á–∏—â–∞—é –º–µ–Ω—é –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
        await makeRequest(`${railwayUrl}/api/menu/clear`, { method: 'DELETE' });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ 75 –±–ª—é–¥ –∏–∑ Excel —Ñ–∞–π–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
        console.log('‚ûï –î–æ–±–∞–≤–ª—è—é –≤—Å–µ 75 –±–ª—é–¥ –∏–∑ Excel —Ñ–∞–π–ª–∞...');
        
        const exactDishes = [
            '–°—É—Ö–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ —Å –º–æ–ª–æ–∫–æ–º', '–û–ª–∞–¥—å–∏', '–ú–æ–ª–æ–∫–æ —Å–≥—É—â–µ–Ω–Ω–æ–µ', '–°–º–µ—Ç–∞–Ω–∞',
            '–î–∂–µ–º —Ñ—Ä—É–∫—Ç–æ–≤—ã–π', '–ú–µ–¥', '–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ', '–°—ã—Ä', '–ö–æ–ª–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞—è',
            '–ö–æ–ª–±–∞—Å–∞ –≤/–∫', '–í–µ—Ç—á–∏–Ω–∞', '–•–ª–µ–± –∏–∑ –ø—à–µ–Ω–∏—á–Ω–æ–π –º—É–∫–∏', '–ß–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º',
            '–ß–∞–π —Å –º–æ–ª–æ–∫–æ–º', '–ö–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º'
        ];

        const exactWeights = [
            '225 –≥', '2 —à—Ç', '20 –≥', '20 –≥', '20 –≥', '20 –≥', '10 –≥', '15 –≥', 
            '20 –≥', '20 –≥', '20 –≥', '20 –≥', '200 –≥', '200 –≥', '200 –≥'
        ];

        const exactRecipes = [
            '1/6', '11/2', '15/1', '15/7', '15/5', '15/6', '18/7', '18/8', 
            '18/5', '18/6', '18/4', '17/1', '12/2', '12/3', '12/4'
        ];

        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ 75 –±–ª—é–¥ (15 –±–ª—é–¥ √ó 5 –¥–Ω–µ–π)
        for (let day = 1; day <= 5; day++) {
            for (let i = 0; i < exactDishes.length; i++) {
                const dish = {
                    name: exactDishes[i],
                    description: `–¢–æ—á–Ω–æ–µ –±–ª—é–¥–æ –∏–∑ Excel —Ñ–∞–π–ª–∞ (–¥–µ–Ω—å ${day})`,
                    price: 0,
                    meal_type: '–∑–∞–≤—Ç—Ä–∞–∫',
                    day_of_week: day,
                    weight: exactWeights[i],
                    recipe_number: exactRecipes[i]
                };
                
                await makeRequest(`${railwayUrl}/api/menu`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(dish)
                });
                
                console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –±–ª—é–¥–æ ${i + 1}/15 –¥–ª—è –¥–Ω—è ${day}`);
            }
        }
        
        console.log('üéâ –í—Å–µ 75 –±–ª—é–¥ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
        
        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        console.log('‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π...');
        await new Promise(resolve => setTimeout(resolve, 5000));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const newStatusResponse = await makeRequest(`${railwayUrl}/`);
        console.log('üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:', newStatusResponse.data);
        
        const menuResponse = await makeRequest(`${railwayUrl}/api/menu`);
        console.log('üçΩÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥ –≤ –º–µ–Ω—é:', menuResponse.data.length);
        
        if (menuResponse.data.length === 75) {
            console.log('üéâ RAILWAY –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù –î–û –ò–î–ï–ê–õ–¨–ù–û–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø!');
            console.log('‚úÖ 75 –±–ª—é–¥ –∏–∑ Excel —Ñ–∞–π–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            console.log('‚úÖ –ö–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8 —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        } else {
            console.log('‚ùå Railway –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥:', menuResponse.data.length);
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Railway:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
ultimateForceUpdate();
