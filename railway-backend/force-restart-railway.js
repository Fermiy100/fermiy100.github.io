#!/usr/bin/env node

/**
 * üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö RAILWAY v5.0.0 üö®
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç Railway –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
 */

const https = require('https');

console.log('üö® –ó–ê–ü–£–°–ö –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ì–û –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê RAILWAY v5.0.0...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTTP –∑–∞–ø—Ä–æ—Å–∞
function makeRequest(url, options = {}) {
    return new Promise((resolve, reject) => {
        const req = https.request(url, options, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                try {
                    const jsonData = JSON.parse(data);
                    resolve({ status: res.statusCode, data: jsonData });
                } catch (e) {
                    resolve({ status: res.statusCode, data: data });
                }
            });
        });
        
        req.on('error', reject);
        
        if (options.body) {
            req.write(options.body);
        }
        
        req.end();
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
async function forceRestartRailway() {
    const railwayUrl = 'https://fermiy100githubio-production.up.railway.app';
    
    try {
        console.log('üì° –ü—Ä–æ–≤–µ—Ä—è—é —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Railway...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
        const statusResponse = await makeRequest(`${railwayUrl}/`);
        console.log('üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:', statusResponse.data);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
        if (statusResponse.data.message && statusResponse.data.message.includes('v5.0.0')) {
            console.log('‚úÖ Railway —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ v5.0.0!');
            return;
        }
        
        console.log('‚ùå Railway –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω! –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è:', statusResponse.data.message);
        
        // –û—á–∏—â–∞–µ–º –º–µ–Ω—é –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        console.log('üóëÔ∏è –û—á–∏—â–∞—é –º–µ–Ω—é –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
        await makeRequest(`${railwayUrl}/api/menu/clear`, { method: 'DELETE' });
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
        console.log('‚ûï –î–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ —Å UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π...');
        const testDish = {
            name: '–¢–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ UTF-8 v5.0.0',
            description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã v5.0.0',
            price: 0,
            meal_type: '–∑–∞–≤—Ç—Ä–∞–∫',
            day_of_week: 1,
            weight: '100 –≥',
            recipe_number: 'v5.0.0/1'
        };
        
        await makeRequest(`${railwayUrl}/api/menu`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(testDish)
        });
        
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');
        
        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        console.log('‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π...');
        await new Promise(resolve => setTimeout(resolve, 5000));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const newStatusResponse = await makeRequest(`${railwayUrl}/`);
        console.log('üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:', newStatusResponse.data);
        
        if (newStatusResponse.data.message && newStatusResponse.data.message.includes('v5.0.0')) {
            console.log('üéâ RAILWAY –£–°–ü–ï–®–ù–û –û–ë–ù–û–í–õ–ï–ù –î–û v5.0.0!');
        } else {
            console.log('‚ùå Railway –≤—Å–µ –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫.');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ Railway:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
forceRestartRailway();
