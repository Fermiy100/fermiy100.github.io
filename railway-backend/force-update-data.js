// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Railway
import sqlite3 from 'sqlite3';
import { RealExcelParser } from './real-excel-parser.js';

const db = new sqlite3.Database('school_meals.db');

console.log('üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–•...');

// –û—á–∏—â–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
db.run("DELETE FROM menu_items", (err) => {
  if (err) console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ menu_items:', err);
  else console.log('‚úÖ menu_items –æ—á–∏—â–µ–Ω–∞');
});

db.run("DELETE FROM favorites", (err) => {
  if (err) console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ favorites:', err);
  else console.log('‚úÖ favorites –æ—á–∏—â–µ–Ω–∞');
});

db.run("DELETE FROM users", (err) => {
  if (err) console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ users:', err);
  else console.log('‚úÖ users –æ—á–∏—â–µ–Ω–∞');
});

db.run("DELETE FROM schools", (err) => {
  if (err) console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ schools:', err);
  else console.log('‚úÖ schools –æ—á–∏—â–µ–Ω–∞');
});

// –°–æ–∑–¥–∞–µ–º —à–∫–æ–ª—É
db.run(`INSERT INTO schools (name, address) VALUES (?, ?)`, 
  ['–°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞ ‚Ññ123', '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1'], function(err) {
  if (err) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∫–æ–ª—ã:', err);
    return;
  }
  
  const schoolId = this.lastID;
  console.log('‚úÖ –®–∫–æ–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID:', schoolId);
  
  // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const directorPassword = 'P@ssw0rd1!'; // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∞
  const parentPassword = 'P@ssw0rd1!';
  
  db.run(`INSERT INTO users (email, password, name, role, school_id, verified) VALUES (?, ?, ?, ?, ?, ?)`,
    ['director@school.test', directorPassword, '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞', 'DIRECTOR', schoolId, 1]);
  
  db.run(`INSERT INTO users (email, password, name, role, school_id, verified) VALUES (?, ?, ?, ?, ?, ?)`,
    ['parent@school.test', parentPassword, '–ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞', 'PARENT', schoolId, 1]);
  
  console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —à–∫–æ–ª—É —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º
  db.run(`UPDATE schools SET director_id = ? WHERE id = ?`, [1, schoolId]);
  
  // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel —Ñ–∞–π–ª–∞
  console.log('üîç –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel —Ñ–∞–π–ª–∞...');
  const realParser = new RealExcelParser();
  
  realParser.parseExcelFile().then(initialMenuData => {
    console.log(`üìä –ü—Ä–æ—á–∏—Ç–∞–Ω–æ ${initialMenuData.length} –±–ª—é–¥ –∏–∑ Excel —Ñ–∞–π–ª–∞`);
    
    const weekStart = new Date().toISOString().split('T')[0];
    let addedCount = 0;
    
    initialMenuData.forEach((dish, index) => {
      db.run(`INSERT INTO menu_items (school_id, name, description, price, meal_type, day_of_week, portion, week_start, recipe_number, weight) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,
        [schoolId, dish.name, dish.description, dish.price, dish.meal_type, dish.day_of_week, dish.portion, weekStart, dish.recipe_number, dish.weight],
        function(err) {
          if (err) {
            console.error(`–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ ${index + 1} (${dish.name}):`, err);
          } else {
            addedCount++;
            console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –±–ª—é–¥–æ ${addedCount}: ${dish.name} (–¥–µ–Ω—å ${dish.day_of_week})`);
          }
          
          if (addedCount === initialMenuData.length) {
            console.log(`üéâ –í–°–ï ${addedCount} –ë–õ–Æ–î –ò–ó EXCEL –£–°–ü–ï–®–ù–û –î–û–ë–ê–í–õ–ï–ù–´!`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–æ—Å—å
            db.all("SELECT COUNT(*) as count FROM menu_items", (err, rows) => {
              if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', err);
              } else {
                console.log(`üìä –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: ${rows[0].count} –±–ª—é–¥`);
              }
              
              db.close();
              console.log('üéØ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
            });
          }
        }
      );
    });
  }).catch(error => {
    console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è Excel —Ñ–∞–π–ª–∞:', error);
    db.close();
  });
});

console.log('üöÄ –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω...');
