#!/usr/bin/env node

/**
 * üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï RAILWAY v5.0.0 üö®
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç Railway —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π UTF-8
 * –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ Excel —Ñ–∞–π–ª–∞.
 */

const https = require('https');

console.log('üö® –ó–ê–ü–£–°–ö –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø RAILWAY v5.0.0...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTTP –∑–∞–ø—Ä–æ—Å–∞
function makeRequest(url, options = {}) {
    return new Promise((resolve, reject) => {
        const req = https.request(url, options, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                try {
                    const jsonData = JSON.parse(data);
                    resolve({ status: res.statusCode, data: jsonData });
                } catch (e) {
                    resolve({ status: res.statusCode, data: data });
                }
            });
        });
        
        req.on('error', reject);
        
        if (options.body) {
            req.write(options.body);
        }
        
        req.end();
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
async function forceUpdateRailway() {
    const railwayUrl = 'https://fermiy100githubio-production.up.railway.app';
    
    try {
        console.log('üì° –ü—Ä–æ–≤–µ—Ä—è—é —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Railway...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
        const statusResponse = await makeRequest(`${railwayUrl}/`);
        console.log('üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:', statusResponse.data);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –º–µ–Ω—é
        console.log('üçΩÔ∏è –ü—Ä–æ–≤–µ—Ä—è—é —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –º–µ–Ω—é...');
        const menuResponse = await makeRequest(`${railwayUrl}/api/menu`);
        console.log('üìã –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω—é:', menuResponse.data.length, '–±–ª—é–¥');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –ø–µ—Ä–≤–æ–≥–æ –±–ª—é–¥–∞
        if (menuResponse.data.length > 0) {
            const firstDish = menuResponse.data[0];
            console.log('üîç –ü–µ—Ä–≤–æ–µ –±–ª—é–¥–æ:', firstDish.name);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
            if (firstDish.name.includes('?')) {
                console.log('‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê –° –ö–û–î–ò–†–û–í–ö–û–ô!');
                console.log('üîß Railway —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
                
                // –û—á–∏—â–∞–µ–º –º–µ–Ω—é
                console.log('üóëÔ∏è –û—á–∏—â–∞—é –º–µ–Ω—é...');
                await makeRequest(`${railwayUrl}/api/menu/clear`, { method: 'DELETE' });
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
                console.log('‚ûï –î–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π...');
                const testDish = {
                    name: '–¢–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ UTF-8',
                    description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã',
                    price: 0,
                    meal_type: '–∑–∞–≤—Ç—Ä–∞–∫',
                    day_of_week: 1,
                    weight: '100 –≥',
                    recipe_number: 'TEST/1'
                };
                
                await makeRequest(`${railwayUrl}/api/menu`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(testDish)
                });
                
                console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                const newMenuResponse = await makeRequest(`${railwayUrl}/api/menu`);
                if (newMenuResponse.data.length > 0) {
                    const newFirstDish = newMenuResponse.data[0];
                    console.log('üîç –ù–æ–≤–æ–µ –ø–µ—Ä–≤–æ–µ –±–ª—é–¥–æ:', newFirstDish.name);
                    
                    if (!newFirstDish.name.includes('?')) {
                        console.log('‚úÖ –ö–û–î–ò–†–û–í–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!');
                    } else {
                        console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
                    }
                }
            } else {
                console.log('‚úÖ –ö–æ–¥–∏—Ä–æ–≤–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!');
            }
        }
        
        console.log('üéâ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Railway:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
forceUpdateRailway();
