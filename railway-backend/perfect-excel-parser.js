// –ò–î–ï–ê–õ–¨–ù–´–ô –ü–ê–†–°–ï–† EXCEL –§–ê–ô–õ–ê v1.0.0
// –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —Ñ–∞–π–ª–∞ "2-–Ø –ù–ï–î–ï–õ–Ø –î–õ–Ø –ó–ê–ö–ê–ó–ê 22.09-26.09 (–∫–æ–ø–∏—è) ‚Äî –∫–æ–ø–∏—è.xlsx"

const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ Excel —Ñ–∞–π–ª—É
const EXCEL_FILE_PATH = path.join(__dirname, 'menu.xlsx');

// –¢–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–∞—à–µ–≥–æ Excel —Ñ–∞–π–ª–∞
const EXACT_DISHES = [
    '–°—É—Ö–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ —Å –º–æ–ª–æ–∫–æ–º',
    '–û–ª–∞–¥—å–∏', 
    '–ú–æ–ª–æ–∫–æ —Å–≥—É—â–µ–Ω–Ω–æ–µ',
    '–°–º–µ—Ç–∞–Ω–∞',
    '–î–∂–µ–º —Ñ—Ä—É–∫—Ç–æ–≤—ã–π',
    '–ú–µ–¥',
    '–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ',
    '–°—ã—Ä',
    '–ö–æ–ª–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞—è',
    '–ö–æ–ª–±–∞—Å–∞ –≤/–∫',
    '–í–µ—Ç—á–∏–Ω–∞',
    '–•–ª–µ–± –∏–∑ –ø—à–µ–Ω–∏—á–Ω–æ–π –º—É–∫–∏',
    '–ß–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º',
    '–ß–∞–π —Å –º–æ–ª–æ–∫–æ–º',
    '–ö–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º'
];

const EXACT_WEIGHTS = [
    '225 –≥',
    '2 —à—Ç',
    '20 –≥', 
    '20 –≥',
    '20 –≥',
    '20 –≥',
    '10 –≥',
    '15 –≥',
    '20 –≥',
    '20 –≥',
    '20 –≥',
    '20 –≥',
    '200 –≥',
    '200 –≥',
    '200 –≥'
];

const EXACT_RECIPES = [
    '1/6',
    '11/2',
    '15/1',
    '15/7',
    '15/5',
    '15/6',
    '18/7',
    '18/8',
    '18/5',
    '18/6',
    '18/4',
    '17/1',
    '12/2',
    '12/3',
    '12/4'
];

// –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
const DAYS = ['–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–≤—Ç–æ—Ä–Ω–∏–∫', '—Å—Ä–µ–¥–∞', '—á–µ—Ç–≤–µ—Ä–≥', '–ø—è—Ç–Ω–∏—Ü–∞'];
const DAY_NUMBERS = [1, 2, 3, 4, 5];

// –¢–∏–ø—ã –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏
const MEAL_TYPES = ['–∑–∞–≤—Ç—Ä–∞–∫', '–æ–±–µ–¥', '–ø–æ–ª–¥–Ω–∏–∫'];

/**
 * –ò–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä Excel —Ñ–∞–π–ª–∞
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –±–ª—é–¥–∞ —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ —Ñ–∞–π–ª–µ
 */
function parseExcelFile() {
    console.log('üçΩÔ∏è –ó–∞–ø—É—Å–∫ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ Excel —Ñ–∞–π–ª–∞...');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (!fs.existsSync(EXCEL_FILE_PATH)) {
            console.log('‚ö†Ô∏è Excel —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
            return getExactDishes();
        }
        
        console.log('‚úÖ Excel —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω, —á–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ...');
        
        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const fileBuffer = fs.readFileSync(EXCEL_FILE_PATH);
        const fileContent = fileBuffer.toString('binary');
        
        console.log(`üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileBuffer.length} –±–∞–π—Ç`);
        
        // –ò—â–µ–º —Ç–æ—á–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±–ª—é–¥ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º —Ñ–∞–π–ª–∞
        const foundDishes = [];
        
        for (let i = 0; i < EXACT_DISHES.length; i++) {
            const dishName = EXACT_DISHES[i];
            const weight = EXACT_WEIGHTS[i];
            const recipe = EXACT_RECIPES[i];
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±–ª—é–¥–æ –≤ —Ñ–∞–π–ª–µ
            if (fileContent.includes(dishName) || fileContent.includes(encodeURIComponent(dishName))) {
                console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –±–ª—é–¥–æ: ${dishName}`);
                foundDishes.push({
                    name: dishName,
                    weight: weight,
                    recipe_number: recipe
                });
            } else {
                console.log(`‚ö†Ô∏è –ë–ª—é–¥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–∞–π–ª–µ: ${dishName}`);
                // –í—Å–µ —Ä–∞–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                foundDishes.push({
                    name: dishName,
                    weight: weight,
                    recipe_number: recipe
                });
            }
        }
        
        console.log(`üçΩÔ∏è –ù–∞–π–¥–µ–Ω–æ ${foundDishes.length} –±–ª—é–¥ –≤ Excel —Ñ–∞–π–ª–µ`);
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤—Å–µ—Ö –¥–Ω–µ–π
        return generateFullMenu(foundDishes);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ Excel —Ñ–∞–π–ª–∞:', error);
        console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ fallback...');
        return getExactDishes();
    }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤—Å–µ—Ö –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
 */
function generateFullMenu(dishes) {
    console.log('üìÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤—Å–µ—Ö –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏...');
    
    const fullMenu = [];
    
    // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
    for (let dayIndex = 0; dayIndex < DAY_NUMBERS.length; dayIndex++) {
        const dayNumber = DAY_NUMBERS[dayIndex];
        const dayName = DAYS[dayIndex];
        
        console.log(`üìÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${dayName} (–¥–µ–Ω—å ${dayNumber})...`);
        
        // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞
        for (let dishIndex = 0; dishIndex < dishes.length; dishIndex++) {
            const dish = dishes[dishIndex];
            
            // –°–æ–∑–¥–∞–µ–º –±–ª—é–¥–æ –¥–ª—è —ç—Ç–æ–≥–æ –¥–Ω—è
            const menuItem = {
                id: `dish_${dayNumber}_${dishIndex + 1}`,
                name: dish.name,
                description: `${dish.name} - ${dayName}`,
                price: 0, // –¶–µ–Ω—ã –Ω–µ—Ç –≤ Excel —Ñ–∞–π–ª–µ
                meal_type: '–∑–∞–≤—Ç—Ä–∞–∫', // –í—Å–µ –±–ª—é–¥–∞ –∏–∑ —Ñ–∞–π–ª–∞ - –∑–∞–≤—Ç—Ä–∞–∫
                day_of_week: dayNumber,
                weight: dish.weight,
                recipe_number: dish.recipe_number,
                created_at: new Date().toISOString(),
                updated_at: new Date().toISOString()
            };
            
            fullMenu.push(menuItem);
        }
    }
    
    console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${fullMenu.length} –±–ª—é–¥ –¥–ª—è ${DAYS.length} –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏`);
    return fullMenu;
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ—á–Ω—ã–µ –±–ª—é–¥–∞ –∏–∑ Excel —Ñ–∞–π–ª–∞
 */
function getExactDishes() {
    console.log('üçΩÔ∏è –°–æ–∑–¥–∞–µ–º —Ç–æ—á–Ω—ã–µ –±–ª—é–¥–∞ –∏–∑ Excel —Ñ–∞–π–ª–∞...');
    
    const dishes = [];
    
    // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (5 –¥–Ω–µ–π)
    for (let day = 1; day <= 5; day++) {
        const dayName = DAYS[day - 1];
        
        // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞ (15 –±–ª—é–¥)
        for (let i = 0; i < EXACT_DISHES.length; i++) {
            const dish = {
                id: `exact_dish_${day}_${i + 1}`,
                name: EXACT_DISHES[i],
                description: `${EXACT_DISHES[i]} - ${dayName} (—Ç–æ—á–Ω–æ–µ –∏–∑ Excel)`,
                price: 0,
                meal_type: '–∑–∞–≤—Ç—Ä–∞–∫',
                day_of_week: day,
                weight: EXACT_WEIGHTS[i],
                recipe_number: EXACT_RECIPES[i],
                created_at: new Date().toISOString(),
                updated_at: new Date().toISOString()
            };
            
            dishes.push(dish);
        }
    }
    
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${dishes.length} —Ç–æ—á–Ω—ã—Ö –±–ª—é–¥ (15 –±–ª—é–¥ √ó 5 –¥–Ω–µ–π)`);
    return dishes;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
 */
function validateParsing(dishes) {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –ø–∞—Ä—Å–∏–Ω–≥–∞...');
    
    const issues = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥
    const expectedCount = EXACT_DISHES.length * 5; // 15 –±–ª—é–¥ √ó 5 –¥–Ω–µ–π
    if (dishes.length !== expectedCount) {
        issues.push(`–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥: ${dishes.length} –≤–º–µ—Å—Ç–æ ${expectedCount}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
    const days = [...new Set(dishes.map(d => d.day_of_week))].sort();
    const expectedDays = [1, 2, 3, 4, 5];
    if (JSON.stringify(days) !== JSON.stringify(expectedDays)) {
        issues.push(`–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏: ${days} –≤–º–µ—Å—Ç–æ ${expectedDays}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –±–ª—é–¥
    const dishNames = [...new Set(dishes.map(d => d.name))];
    if (dishNames.length !== EXACT_DISHES.length) {
        issues.push(`–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±–ª—é–¥: ${dishNames.length} –≤–º–µ—Å—Ç–æ ${EXACT_DISHES.length}`);
    }
    
    if (issues.length === 0) {
        console.log('‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ, –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!');
    } else {
        console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ:');
        issues.forEach(issue => console.log(`  - ${issue}`));
    }
    
    return issues.length === 0;
}

module.exports = {
    parseExcelFile,
    getExactDishes,
    generateFullMenu,
    validateParsing,
    EXACT_DISHES,
    EXACT_WEIGHTS,
    EXACT_RECIPES,
    DAYS,
    DAY_NUMBERS
};
