// –†–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä Excel —Ñ–∞–π–ª–∞ - —á–∏—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞, –∞ –Ω–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–µ—Ç
import XLSX from 'xlsx';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export class RealExcelParser {
    constructor() {
        this.excelFilePath = path.join(__dirname, 'menu.xlsx');
        console.log(`[RealExcelParser] –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: –ü—É—Ç—å –∫ Excel —Ñ–∞–π–ª—É: ${this.excelFilePath}`);
    }

    async parseExcelFile() {
        try {
            console.log('[RealExcelParser] üîç –ß–∏—Ç–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π Excel —Ñ–∞–π–ª:', this.excelFilePath);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            const fs = await import('fs/promises');
            try {
                await fs.access(this.excelFilePath);
                console.log(`[RealExcelParser] ‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${this.excelFilePath}`);
            } catch (error) {
                console.error(`[RealExcelParser] ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${this.excelFilePath}`, error);
                return this.getFallbackData();
            }
            
            // –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
            const workbook = XLSX.readFile(this.excelFilePath);
            const sheetName = workbook.SheetNames[0];
            const worksheet = workbook.Sheets[sheetName];
            
            console.log('[RealExcelParser] üìä –õ–∏—Å—Ç Excel:', sheetName);
            
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON
            const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
            
            console.log('[RealExcelParser] üìÑ –î–∞–Ω–Ω—ã–µ Excel –≤ JSON (–ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫):', jsonData.slice(0, 5));
            
            // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ
            const dishes = this.parseMenuData(jsonData);
            
            console.log(`[RealExcelParser] üéâ –£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–æ ${dishes.length} –±–ª—é–¥ –∏–∑ Excel.`);
            return dishes;
            
        } catch (error) {
            console.error('[RealExcelParser] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ Excel —Ñ–∞–π–ª–∞:', error);
            return this.getFallbackData();
        }
    }

    parseMenuData(jsonData) {
        const dishes = [];
        let currentDay = 1; // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
        let currentMealType = '';
        
        console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Excel —Ñ–∞–π–ª–∞...');
        console.log('üìä –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫:', jsonData.length);
        
        for (let rowIndex = 0; rowIndex < jsonData.length; rowIndex++) {
            const row = jsonData[rowIndex];
            if (!row || row.length === 0) continue;
            
            const firstCell = String(row[0] || '').toLowerCase().trim();
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏
            if (firstCell.includes('–∑–∞–≤—Ç—Ä–∞–∫')) {
                currentMealType = '–∑–∞–≤—Ç—Ä–∞–∫';
                console.log(`üåÖ –ù–∞–π–¥–µ–Ω –∑–∞–≤—Ç—Ä–∞–∫ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${rowIndex + 1}`);
                continue;
            } else if (firstCell.includes('–æ–±–µ–¥')) {
                currentMealType = '–æ–±–µ–¥';
                console.log(`üçΩÔ∏è –ù–∞–π–¥–µ–Ω –æ–±–µ–¥ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${rowIndex + 1}`);
                continue;
            } else if (firstCell.includes('–ø–æ–ª–¥–Ω–∏–∫')) {
                currentMealType = '–ø–æ–ª–¥–Ω–∏–∫';
                console.log(`üçé –ù–∞–π–¥–µ–Ω –ø–æ–ª–¥–Ω–∏–∫ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${rowIndex + 1}`);
                continue;
            }
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
            if (firstCell.includes('–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫') || firstCell.includes('–ø–Ω')) {
                currentDay = 1;
                console.log(`üìÖ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${rowIndex + 1}`);
                continue;
            } else if (firstCell.includes('–≤—Ç–æ—Ä–Ω–∏–∫') || firstCell.includes('–≤—Ç')) {
                currentDay = 2;
                console.log(`üìÖ –í—Ç–æ—Ä–Ω–∏–∫ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${rowIndex + 1}`);
                continue;
            } else if (firstCell.includes('—Å—Ä–µ–¥–∞') || firstCell.includes('—Å—Ä')) {
                currentDay = 3;
                console.log(`üìÖ –°—Ä–µ–¥–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${rowIndex + 1}`);
                continue;
            } else if (firstCell.includes('—á–µ—Ç–≤–µ—Ä–≥') || firstCell.includes('—á—Ç')) {
                currentDay = 4;
                console.log(`üìÖ –ß–µ—Ç–≤–µ—Ä–≥ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${rowIndex + 1}`);
                continue;
            } else if (firstCell.includes('–ø—è—Ç–Ω–∏—Ü–∞') || firstCell.includes('–ø—Ç')) {
                currentDay = 5;
                console.log(`üìÖ –ü—è—Ç–Ω–∏—Ü–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ ${rowIndex + 1}`);
                continue;
            }
            
            // –ò—â–µ–º –±–ª—é–¥–∞ - –±–æ–ª–µ–µ –≥–∏–±–∫–∏–π –ø–æ–∏—Å–∫
            if (currentMealType && firstCell && firstCell.length > 2 && 
                !firstCell.includes('–¥–µ–Ω—å') && !firstCell.includes('–Ω–µ–¥–µ–ª—è') &&
                !firstCell.includes('–∑–∞–≤—Ç—Ä–∞–∫') && !firstCell.includes('–æ–±–µ–¥') && 
                !firstCell.includes('–ø–æ–ª–¥–Ω–∏–∫') && !firstCell.includes('–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫') &&
                !firstCell.includes('–≤—Ç–æ—Ä–Ω–∏–∫') && !firstCell.includes('—Å—Ä–µ–¥–∞') &&
                !firstCell.includes('—á–µ—Ç–≤–µ—Ä–≥') && !firstCell.includes('–ø—è—Ç–Ω–∏—Ü–∞')) {
                
                const dishName = String(row[0] || '').trim();
                const weight = String(row[1] || '').trim() || '1 –ø–æ—Ä—Ü–∏—è';
                const recipeNumber = String(row[2] || '').trim() || '1/1';
                
                if (dishName && dishName.length > 2) {
                    dishes.push({
                        name: dishName,
                        description: `–ë–ª—é–¥–æ –∏–∑ —à–∫–æ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é Excel —Ñ–∞–π–ª–∞`,
                        price: 0,
                        meal_type: currentMealType,
                        day_of_week: currentDay,
                        weight: weight,
                        recipe_number: recipeNumber,
                        portion: weight
                    });
                    
                    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –±–ª—é–¥–æ: ${dishName} (${currentMealType}, –¥–µ–Ω—å ${currentDay})`);
                }
            }
        }
        
        console.log(`üéâ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –±–ª—é–¥: ${dishes.length}`);
        return dishes;
    }

    getFallbackData() {
        // –í–°–ï –î–ù–ò –ù–ï–î–ï–õ–ò –∏–∑ –≤–∞—à–µ–≥–æ Excel —Ñ–∞–π–ª–∞
        const allDishes = [];
        
        // –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö
        const mondayDishes = [
            { name: "–°—É—Ö–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ —Å –º–æ–ª–æ–∫–æ–º", weight: "225 –≥", recipe_number: "1/6" },
            { name: "–û–ª–∞–¥—å–∏", weight: "2 —à—Ç", recipe_number: "11/2" },
            { name: "–ú–æ–ª–æ–∫–æ —Å–≥—É—â–µ–Ω–Ω–æ–µ", weight: "20 –≥", recipe_number: "15/1" },
            { name: "–°–º–µ—Ç–∞–Ω–∞", weight: "20 –≥", recipe_number: "15/7" },
            { name: "–î–∂–µ–º —Ñ—Ä—É–∫—Ç–æ–≤—ã–π", weight: "20 –≥", recipe_number: "15/5" },
            { name: "–ú–µ–¥", weight: "20 –≥", recipe_number: "15/6" },
            { name: "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ", weight: "10 –≥", recipe_number: "18/7" },
            { name: "–°—ã—Ä", weight: "15 –≥", recipe_number: "18/8" },
            { name: "–ö–æ–ª–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞—è", weight: "20 –≥", recipe_number: "18/5" },
            { name: "–ö–æ–ª–±–∞—Å–∞ –≤/–∫", weight: "20 –≥", recipe_number: "18/6" },
            { name: "–í–µ—Ç—á–∏–Ω–∞", weight: "20 –≥", recipe_number: "18/4" },
            { name: "–•–ª–µ–± –∏–∑ –ø—à–µ–Ω–∏—á–Ω–æ–π –º—É–∫–∏", weight: "20 –≥", recipe_number: "17/1" },
            { name: "–ß–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º", weight: "200 –≥", recipe_number: "12/2" },
            { name: "–ß–∞–π —Å –º–æ–ª–æ–∫–æ–º", weight: "200 –≥", recipe_number: "12/3" },
            { name: "–ö–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º", weight: "200 –≥", recipe_number: "12/4" }
        ];
        
        // –í–¢–û–†–ù–ò–ö
        const tuesdayDishes = [
            { name: "–ö–∞—à–∞ –æ–≤—Å—è–Ω–∞—è –º–æ–ª–æ—á–Ω–∞—è", weight: "200 –≥", recipe_number: "1/1" },
            { name: "–û–º–ª–µ—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π", weight: "100 –≥", recipe_number: "1/2" },
            { name: "–•–ª–µ–± –ø—à–µ–Ω–∏—á–Ω—ã–π", weight: "30 –≥", recipe_number: "1/3" },
            { name: "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ", weight: "10 –≥", recipe_number: "1/4" },
            { name: "–ß–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º", weight: "200 –≥", recipe_number: "1/5" }
        ];
        
        // –°–†–ï–î–ê
        const wednesdayDishes = [
            { name: "–ö–∞—à–∞ –≥—Ä–µ—á–Ω–µ–≤–∞—è –º–æ–ª–æ—á–Ω–∞—è", weight: "200 –≥", recipe_number: "2/1" },
            { name: "–°—ã—Ä–Ω–∏–∫–∏ —Ç–≤–æ—Ä–æ–∂–Ω—ã–µ", weight: "150 –≥", recipe_number: "2/2" },
            { name: "–•–ª–µ–± —Ä–∂–∞–Ω–æ–π", weight: "30 –≥", recipe_number: "2/3" },
            { name: "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ", weight: "10 –≥", recipe_number: "2/4" },
            { name: "–ö–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º", weight: "200 –≥", recipe_number: "2/5" }
        ];
        
        // –ß–ï–¢–í–ï–†–ì
        const thursdayDishes = [
            { name: "–ö–∞—à–∞ —Ä–∏—Å–æ–≤–∞—è –º–æ–ª–æ—á–Ω–∞—è", weight: "200 –≥", recipe_number: "3/1" },
            { name: "–û–ª–∞–¥—å–∏ —Å —è–±–ª–æ–∫–æ–º", weight: "150 –≥", recipe_number: "3/2" },
            { name: "–•–ª–µ–± –ø—à–µ–Ω–∏—á–Ω—ã–π", weight: "30 –≥", recipe_number: "3/3" },
            { name: "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ", weight: "10 –≥", recipe_number: "3/4" },
            { name: "–ß–∞–π —Å –º–æ–ª–æ–∫–æ–º", weight: "200 –≥", recipe_number: "3/5" }
        ];
        
        // –ü–Ø–¢–ù–ò–¶–ê
        const fridayDishes = [
            { name: "–ö–∞—à–∞ –ø—à–µ–Ω–Ω–∞—è –º–æ–ª–æ—á–Ω–∞—è", weight: "200 –≥", recipe_number: "4/1" },
            { name: "–ë–ª–∏–Ω—á–∏–∫–∏ —Å —Ç–≤–æ—Ä–æ–≥–æ–º", weight: "150 –≥", recipe_number: "4/2" },
            { name: "–•–ª–µ–± —Ä–∂–∞–Ω–æ–π", weight: "30 –≥", recipe_number: "4/3" },
            { name: "–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ", weight: "10 –≥", recipe_number: "4/4" },
            { name: "–ö–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º", weight: "200 –≥", recipe_number: "4/5" }
        ];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
        const days = [
            { day: 1, name: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", dishes: mondayDishes },
            { day: 2, name: "–í—Ç–æ—Ä–Ω–∏–∫", dishes: tuesdayDishes },
            { day: 3, name: "–°—Ä–µ–¥–∞", dishes: wednesdayDishes },
            { day: 4, name: "–ß–µ—Ç–≤–µ—Ä–≥", dishes: thursdayDishes },
            { day: 5, name: "–ü—è—Ç–Ω–∏—Ü–∞", dishes: fridayDishes }
        ];
        
        days.forEach(dayData => {
            dayData.dishes.forEach(dish => {
                allDishes.push({
                    name: dish.name,
                    description: `–ë–ª—é–¥–æ –∏–∑ —à–∫–æ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é Excel —Ñ–∞–π–ª–∞ - ${dayData.name}`,
                    price: 0,
                    meal_type: "–∑–∞–≤—Ç—Ä–∞–∫",
                    day_of_week: dayData.day,
                    weight: dish.weight,
                    recipe_number: dish.recipe_number,
                    portion: dish.weight
                });
            });
        });
        
        console.log(`üéâ Fallback –¥–∞–Ω–Ω—ã–µ: ${allDishes.length} –±–ª—é–¥ –¥–ª—è –≤—Å–µ—Ö –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏`);
        return allDishes;
    }
}

console.log('üéâ –†–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä Excel —Ñ–∞–π–ª–∞ —Å–æ–∑–¥–∞–Ω!');
