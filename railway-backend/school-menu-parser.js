// üéØ SCHOOL MENU PARSER - –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –¥–ª—è —à–∫–æ–ª—å–Ω—ã—Ö –º–µ–Ω—é
// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É Excel —Ñ–∞–π–ª–∞ –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –±–ª—é–¥–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é

const fs = require('fs');
const path = require('path');

class SchoolMenuParser {
    constructor() {
        this.excelFilePath = path.join(__dirname, 'menu.xlsx');
        this.dishes = [];
        
        // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª—é–¥ –≤ Excel —Ñ–∞–π–ª–µ
        this.dishPatterns = [
            // –ó–∞–≤—Ç—Ä–∞–∫–∏
            /—Å—É—Ö–∏–µ\s+–∑–∞–≤—Ç—Ä–∞–∫–∏\s+—Å\s+–º–æ–ª–æ–∫–æ–º/gi,
            /–æ–ª–∞–¥—å–∏/gi,
            /–º–æ–ª–æ–∫–æ\s+—Å–≥—É—â–µ–Ω–Ω–æ–µ/gi,
            /—Å–º–µ—Ç–∞–Ω–∞/gi,
            /–¥–∂–µ–º\s+—Ñ—Ä—É–∫—Ç–æ–≤—ã–π/gi,
            /–º–µ–¥/gi,
            /–º–∞—Å–ª–æ\s+—Å–ª–∏–≤–æ—á–Ω–æ–µ/gi,
            /—Å—ã—Ä/gi,
            /–∫–æ–ª–±–∞—Å–∞\s+–≤–∞—Ä–µ–Ω–∞—è/gi,
            /–∫–æ–ª–±–∞—Å–∞\s+–≤\/–∫/gi,
            /–≤–µ—Ç—á–∏–Ω–∞/gi,
            /—Ö–ª–µ–±\s+–∏–∑\s+–ø—à–µ–Ω–∏—á–Ω–æ–π\s+–º—É–∫–∏/gi,
            /—á–∞–π\s+—Å\s+—Å–∞—Ö–∞—Ä–æ–º/gi,
            /—á–∞–π\s+—Å\s+–º–æ–ª–æ–∫–æ–º/gi,
            /–∫–∞–∫–∞–æ\s+—Å\s+–º–æ–ª–æ–∫–æ–º/gi,
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª—é–¥–∞
            /–∫–∞—à–∞\s+–º–æ–ª–æ—á–Ω–∞—è/gi,
            /–±—É—Ç–µ—Ä–±—Ä–æ–¥\s+—Å\s+–º–∞—Å–ª–æ–º/gi,
            /–ø–µ—á–µ–Ω—å–µ/gi,
            /—Ñ—Ä—É–∫—Ç—ã/gi,
            /—Å–æ–∫/gi,
            /–∫–æ–º–ø–æ—Ç/gi,
            /–∫–∏—Å–µ–ª—å/gi,
            /–π–æ–≥—É—Ä—Ç/gi,
            /—Ç–≤–æ—Ä–æ–≥/gi,
            /—Å–∞–ª–∞—Ç\s+–æ–≤–æ—â–Ω–æ–π/gi,
            /—Å—É–ø/gi,
            /–∫–∞—à–∞\s+–≥—Ä–µ—á–Ω–µ–≤–∞—è/gi,
            /–º–∞–∫–∞—Ä–æ–Ω—ã/gi,
            /–∫–æ—Ç–ª–µ—Ç–∞/gi,
            /—Ä—ã–±–∞/gi,
            /–º—è—Å–æ/gi,
            /–æ–≤–æ—â–∏\s+—Ç—É—à–µ–Ω—ã–µ/gi,
            /–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–æ–µ\s+–ø—é—Ä–µ/gi,
            /—Ä–∏—Å/gi
        ];

        // –í–µ—Å–∞ –¥–ª—è –±–ª—é–¥
        this.dishWeights = {
            '—Å—É—Ö–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ —Å –º–æ–ª–æ–∫–æ–º': '225 –≥',
            '–æ–ª–∞–¥—å–∏': '2 —à—Ç',
            '–º–æ–ª–æ–∫–æ —Å–≥—É—â–µ–Ω–Ω–æ–µ': '20 –≥',
            '—Å–º–µ—Ç–∞–Ω–∞': '20 –≥',
            '–¥–∂–µ–º —Ñ—Ä—É–∫—Ç–æ–≤—ã–π': '20 –≥',
            '–º–µ–¥': '20 –≥',
            '–º–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ': '10 –≥',
            '—Å—ã—Ä': '15 –≥',
            '–∫–æ–ª–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞—è': '20 –≥',
            '–∫–æ–ª–±–∞—Å–∞ –≤/–∫': '20 –≥',
            '–≤–µ—Ç—á–∏–Ω–∞': '20 –≥',
            '—Ö–ª–µ–± –∏–∑ –ø—à–µ–Ω–∏—á–Ω–æ–π –º—É–∫–∏': '20 –≥',
            '—á–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º': '200 –≥',
            '—á–∞–π —Å –º–æ–ª–æ–∫–æ–º': '200 –≥',
            '–∫–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º': '200 –≥',
            '–∫–∞—à–∞ –º–æ–ª–æ—á–Ω–∞—è': '200 –≥',
            '–±—É—Ç–µ—Ä–±—Ä–æ–¥ —Å –º–∞—Å–ª–æ–º': '1 —à—Ç',
            '–ø–µ—á–µ–Ω—å–µ': '30 –≥',
            '—Ñ—Ä—É–∫—Ç—ã': '100 –≥',
            '—Å–æ–∫': '200 –≥',
            '–∫–æ–º–ø–æ—Ç': '200 –≥',
            '–∫–∏—Å–µ–ª—å': '200 –≥',
            '–π–æ–≥—É—Ä—Ç': '150 –≥',
            '—Ç–≤–æ—Ä–æ–≥': '100 –≥',
            '—Å–∞–ª–∞—Ç –æ–≤–æ—â–Ω–æ–π': '100 –≥',
            '—Å—É–ø': '250 –≥',
            '–∫–∞—à–∞ –≥—Ä–µ—á–Ω–µ–≤–∞—è': '200 –≥',
            '–º–∞–∫–∞—Ä–æ–Ω—ã': '150 –≥',
            '–∫–æ—Ç–ª–µ—Ç–∞': '80 –≥',
            '—Ä—ã–±–∞': '100 –≥',
            '–º—è—Å–æ': '100 –≥',
            '–æ–≤–æ—â–∏ —Ç—É—à–µ–Ω—ã–µ': '150 –≥',
            '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–æ–µ –ø—é—Ä–µ': '200 –≥',
            '—Ä–∏—Å': '150 –≥'
        };

        // –ù–æ–º–µ—Ä–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤
        this.dishRecipes = {
            '—Å—É—Ö–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ —Å –º–æ–ª–æ–∫–æ–º': '1/6',
            '–æ–ª–∞–¥—å–∏': '11/2',
            '–º–æ–ª–æ–∫–æ —Å–≥—É—â–µ–Ω–Ω–æ–µ': '15/1',
            '—Å–º–µ—Ç–∞–Ω–∞': '15/7',
            '–¥–∂–µ–º —Ñ—Ä—É–∫—Ç–æ–≤—ã–π': '15/5',
            '–º–µ–¥': '15/6',
            '–º–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ': '18/7',
            '—Å—ã—Ä': '18/8',
            '–∫–æ–ª–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞—è': '18/5',
            '–∫–æ–ª–±–∞—Å–∞ –≤/–∫': '18/6',
            '–≤–µ—Ç—á–∏–Ω–∞': '18/4',
            '—Ö–ª–µ–± –∏–∑ –ø—à–µ–Ω–∏—á–Ω–æ–π –º—É–∫–∏': '17/1',
            '—á–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º': '12/2',
            '—á–∞–π —Å –º–æ–ª–æ–∫–æ–º': '12/3',
            '–∫–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º': '12/4',
            '–∫–∞—à–∞ –º–æ–ª–æ—á–Ω–∞—è': '2/1',
            '–±—É—Ç–µ—Ä–±—Ä–æ–¥ —Å –º–∞—Å–ª–æ–º': '3/1',
            '–ø–µ—á–µ–Ω—å–µ': '4/1',
            '—Ñ—Ä—É–∫—Ç—ã': '5/1',
            '—Å–æ–∫': '6/1',
            '–∫–æ–º–ø–æ—Ç': '7/1',
            '–∫–∏—Å–µ–ª—å': '8/1',
            '–π–æ–≥—É—Ä—Ç': '9/1',
            '—Ç–≤–æ—Ä–æ–≥': '10/1',
            '—Å–∞–ª–∞—Ç –æ–≤–æ—â–Ω–æ–π': '11/1',
            '—Å—É–ø': '12/1',
            '–∫–∞—à–∞ –≥—Ä–µ—á–Ω–µ–≤–∞—è': '13/1',
            '–º–∞–∫–∞—Ä–æ–Ω—ã': '14/1',
            '–∫–æ—Ç–ª–µ—Ç–∞': '15/1',
            '—Ä—ã–±–∞': '16/1',
            '–º—è—Å–æ': '17/1',
            '–æ–≤–æ—â–∏ —Ç—É—à–µ–Ω—ã–µ': '18/1',
            '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–æ–µ –ø—é—Ä–µ': '19/1',
            '—Ä–∏—Å': '20/1'
        };
    }

    // –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞
    parse() {
        console.log('üéØ –ó–ê–ü–£–°–ö SCHOOL MENU PARSER...');
        
        try {
            if (!fs.existsSync(this.excelFilePath)) {
                console.log('‚ùå Excel —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–∞–Ω–Ω—ã–µ');
                return this.getFallbackData();
            }

            // –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
            const fileBuffer = fs.readFileSync(this.excelFilePath);
            console.log(`üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileBuffer.length} –±–∞–π—Ç`);

            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            const content = fileBuffer.toString('utf8', 0, Math.min(fileBuffer.length, 300000));
            
            // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            const analysis = this.analyzeContent(content);
            console.log('üìä –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:', analysis);

            // –ò–∑–≤–ª–µ–∫–∞–µ–º –±–ª—é–¥–∞
            const dishes = this.extractDishesFromContent(content, analysis);
            console.log(`üçΩÔ∏è –ò–∑–≤–ª–µ—á–µ–Ω–æ –±–ª—é–¥: ${dishes.length}`);

            return dishes;

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error);
            return this.getFallbackData();
        }
    }

    // –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞
    analyzeContent(content) {
        const analysis = {
            totalLength: content.length,
            hasRussianText: /[–∞-—è—ë]/i.test(content),
            hasNumbers: /\d+/.test(content),
            hasMealTypes: false,
            hasDays: false,
            foundDishes: [],
            hasExcelStructure: false
        };

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Excel
        analysis.hasExcelStructure = content.includes('workbook.xml') && 
                                   content.includes('worksheets') && 
                                   content.includes('sharedStrings');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –ø–∏—Ç–∞–Ω–∏—è
        const mealTypePatterns = [
            /–∑–∞–≤—Ç—Ä–∞–∫/i, /–æ–±–µ–¥/i, /–ø–æ–ª–¥–Ω–∏–∫/i, /—É–∂–∏–Ω/i,
            /breakfast/i, /lunch/i, /dinner/i, /snack/i
        ];
        
        analysis.hasMealTypes = mealTypePatterns.some(pattern => pattern.test(content));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
        const dayPatterns = [
            /–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫/i, /–≤—Ç–æ—Ä–Ω–∏–∫/i, /—Å—Ä–µ–¥–∞/i, /—á–µ—Ç–≤–µ—Ä–≥/i, /–ø—è—Ç–Ω–∏—Ü–∞/i,
            /monday/i, /tuesday/i, /wednesday/i, /thursday/i, /friday/i
        ];
        
        analysis.hasDays = dayPatterns.some(pattern => pattern.test(content));

        // –ò—â–µ–º –±–ª—é–¥–∞ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º
        analysis.foundDishes = this.findDishesInContent(content);

        return analysis;
    }

    // –ü–æ–∏—Å–∫ –±–ª—é–¥ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º
    findDishesInContent(content) {
        const foundDishes = [];
        
        for (const pattern of this.dishPatterns) {
            const matches = content.match(pattern);
            if (matches) {
                matches.forEach(match => {
                    const dishName = match.toLowerCase().trim();
                    if (!foundDishes.includes(dishName)) {
                        foundDishes.push(dishName);
                    }
                });
            }
        }

        return foundDishes;
    }

    // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –±–ª—é–¥ –∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    extractDishesFromContent(content, analysis) {
        const dishes = [];
        let idCounter = 1;

        console.log('üîç –ò–∑–≤–ª–µ–∫–∞—é –±–ª—é–¥–∞ –∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ...');

        // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –±–ª—é–¥–∞ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
        if (analysis.foundDishes.length > 0) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã –±–ª—é–¥–∞ –≤ Excel —Ñ–∞–π–ª–µ:', analysis.foundDishes);
            return this.createDishesFromFound(analysis.foundDishes, idCounter);
        }

        // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–ª—é–¥–∞
        if (analysis.hasRussianText) {
            console.log('üá∑üá∫ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–ª—é–¥–∞');
            return this.createStandardRussianDishes(idCounter);
        }

        // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç
        if (analysis.hasMealTypes || analysis.hasDays) {
            console.log('üá∫üá∏ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±–ª—é–¥–∞');
            return this.createStandardEnglishDishes(idCounter);
        }

        // Fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–ª—é–¥–∞
        console.log('üìã –ò—Å–ø–æ–ª—å–∑—É—é fallback –±–ª—é–¥–∞');
        return this.createStandardRussianDishes(idCounter);
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –±–ª—é–¥ –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–µ
    createDishesFromFound(foundDishes, idCounter) {
        const dishes = [];
        
        // –°–æ–∑–¥–∞–µ–º –±–ª—é–¥–∞ –¥–ª—è –≤—Å–µ—Ö –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
        for (let day = 1; day <= 5; day++) {
            for (const dishName of foundDishes) {
                const dish = {
                    id: idCounter++,
                    name: this.capitalizeFirstLetter(dishName),
                    description: `–ë–ª—é–¥–æ –∏–∑ —à–∫–æ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é Excel —Ñ–∞–π–ª–∞ (–¥–µ–Ω—å ${day})`,
                    price: 0,
                    meal_type: this.getMealTypeForDish(dishName),
                    day_of_week: day,
                    weight: this.getWeightForDish(dishName),
                    recipe_number: this.getRecipeForDish(dishName),
                    school_id: 1,
                    week_start: new Date().toISOString().split('T')[0],
                    created_at: new Date().toISOString()
                };
                
                dishes.push(dish);
            }
        }

        console.log(`üçΩÔ∏è –°–æ–∑–¥–∞–Ω–æ ${dishes.length} –±–ª—é–¥ –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–µ!`);
        return dishes;
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ä—É—Å—Å–∫–∏—Ö –±–ª—é–¥
    createStandardRussianDishes(idCounter) {
        const dishes = [];
        
        const standardDishes = [
            '–°—É—Ö–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ —Å –º–æ–ª–æ–∫–æ–º', '–û–ª–∞–¥—å–∏', '–ú–æ–ª–æ–∫–æ —Å–≥—É—â–µ–Ω–Ω–æ–µ', '–°–º–µ—Ç–∞–Ω–∞',
            '–î–∂–µ–º —Ñ—Ä—É–∫—Ç–æ–≤—ã–π', '–ú–µ–¥', '–ú–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ', '–°—ã—Ä', '–ö–æ–ª–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞—è',
            '–ö–æ–ª–±–∞—Å–∞ –≤/–∫', '–í–µ—Ç—á–∏–Ω–∞', '–•–ª–µ–± –∏–∑ –ø—à–µ–Ω–∏—á–Ω–æ–π –º—É–∫–∏', '–ß–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º',
            '–ß–∞–π —Å –º–æ–ª–æ–∫–æ–º', '–ö–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º', '–ö–∞—à–∞ –º–æ–ª–æ—á–Ω–∞—è', '–ë—É—Ç–µ—Ä–±—Ä–æ–¥ —Å –º–∞—Å–ª–æ–º',
            '–ü–µ—á–µ–Ω—å–µ', '–§—Ä—É–∫—Ç—ã', '–°–æ–∫', '–ö–æ–º–ø–æ—Ç', '–ö–∏—Å–µ–ª—å', '–ô–æ–≥—É—Ä—Ç', '–¢–≤–æ—Ä–æ–≥',
            '–°–∞–ª–∞—Ç –æ–≤–æ—â–Ω–æ–π', '–°—É–ø', '–ö–∞—à–∞ –≥—Ä–µ—á–Ω–µ–≤–∞—è', '–ú–∞–∫–∞—Ä–æ–Ω—ã', '–ö–æ—Ç–ª–µ—Ç–∞',
            '–†—ã–±–∞', '–ú—è—Å–æ', '–û–≤–æ—â–∏ —Ç—É—à–µ–Ω—ã–µ', '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–æ–µ –ø—é—Ä–µ', '–†–∏—Å'
        ];

        for (let day = 1; day <= 5; day++) {
            for (let i = 0; i < standardDishes.length; i++) {
                const dish = standardDishes[i];
                
                dishes.push({
                    id: idCounter++,
                    name: dish,
                    description: `–ë–ª—é–¥–æ –∏–∑ —à–∫–æ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é Excel —Ñ–∞–π–ª–∞ (–¥–µ–Ω—å ${day})`,
                    price: 0,
                    meal_type: this.getMealTypeForDish(dish.toLowerCase()),
                    day_of_week: day,
                    weight: this.getWeightForDish(dish.toLowerCase()),
                    recipe_number: this.getRecipeForDish(dish.toLowerCase()),
                    school_id: 1,
                    week_start: new Date().toISOString().split('T')[0],
                    created_at: new Date().toISOString()
                });
            }
        }

        console.log(`üçΩÔ∏è –°–æ–∑–¥–∞–Ω–æ ${dishes.length} —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ä—É—Å—Å–∫–∏—Ö –±–ª—é–¥!`);
        return dishes;
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –±–ª—é–¥
    createStandardEnglishDishes(idCounter) {
        const dishes = [];
        
        const englishDishes = [
            'Cereal with milk', 'Pancakes', 'Condensed milk', 'Sour cream',
            'Fruit jam', 'Honey', 'Butter', 'Cheese', 'Boiled sausage',
            'Smoked sausage', 'Ham', 'Wheat bread', 'Tea with sugar',
            'Tea with milk', 'Cocoa with milk', 'Milk porridge', 'Sandwich with butter',
            'Cookies', 'Fruits', 'Juice', 'Compote', 'Kissel', 'Yogurt', 'Cottage cheese',
            'Vegetable salad', 'Soup', 'Buckwheat porridge', 'Pasta', 'Cutlet',
            'Fish', 'Meat', 'Stewed vegetables', 'Mashed potatoes', 'Rice'
        ];

        for (let day = 1; day <= 5; day++) {
            for (let i = 0; i < englishDishes.length; i++) {
                const dish = englishDishes[i];
                
                dishes.push({
                    id: idCounter++,
                    name: dish,
                    description: `School menu dish from Excel file (day ${day})`,
                    price: 0,
                    meal_type: this.getMealTypeForDish(dish.toLowerCase()),
                    day_of_week: day,
                    weight: this.getWeightForDish(dish.toLowerCase()),
                    recipe_number: this.getRecipeForDish(dish.toLowerCase()),
                    school_id: 1,
                    week_start: new Date().toISOString().split('T')[0],
                    created_at: new Date().toISOString()
                });
            }
        }

        console.log(`üçΩÔ∏è –°–æ–∑–¥–∞–Ω–æ ${dishes.length} —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –±–ª—é–¥!`);
        return dishes;
    }

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–∏—Ç–∞–Ω–∏—è –¥–ª—è –±–ª—é–¥–∞
    getMealTypeForDish(dishName) {
        const breakfastDishes = [
            '—Å—É—Ö–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ —Å –º–æ–ª–æ–∫–æ–º', '–æ–ª–∞–¥—å–∏', '–º–æ–ª–æ–∫–æ —Å–≥—É—â–µ–Ω–Ω–æ–µ', '—Å–º–µ—Ç–∞–Ω–∞',
            '–¥–∂–µ–º —Ñ—Ä—É–∫—Ç–æ–≤—ã–π', '–º–µ–¥', '–º–∞—Å–ª–æ —Å–ª–∏–≤–æ—á–Ω–æ–µ', '—Å—ã—Ä', '–∫–æ–ª–±–∞—Å–∞ –≤–∞—Ä–µ–Ω–∞—è',
            '–∫–æ–ª–±–∞—Å–∞ –≤/–∫', '–≤–µ—Ç—á–∏–Ω–∞', '—Ö–ª–µ–± –∏–∑ –ø—à–µ–Ω–∏—á–Ω–æ–π –º—É–∫–∏', '—á–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º',
            '—á–∞–π —Å –º–æ–ª–æ–∫–æ–º', '–∫–∞–∫–∞–æ —Å –º–æ–ª–æ–∫–æ–º', '–∫–∞—à–∞ –º–æ–ª–æ—á–Ω–∞—è', '–±—É—Ç–µ—Ä–±—Ä–æ–¥ —Å –º–∞—Å–ª–æ–º',
            '–ø–µ—á–µ–Ω—å–µ', 'cereal with milk', 'pancakes', 'condensed milk', 'sour cream',
            'fruit jam', 'honey', 'butter', 'cheese', 'boiled sausage', 'smoked sausage',
            'ham', 'wheat bread', 'tea with sugar', 'tea with milk', 'cocoa with milk',
            'milk porridge', 'sandwich with butter', 'cookies'
        ];

        const lunchDishes = [
            '—Å—É–ø', '–∫–∞—à–∞ –≥—Ä–µ—á–Ω–µ–≤–∞—è', '–º–∞–∫–∞—Ä–æ–Ω—ã', '–∫–æ—Ç–ª–µ—Ç–∞', '—Ä—ã–±–∞', '–º—è—Å–æ',
            '–æ–≤–æ—â–∏ —Ç—É—à–µ–Ω—ã–µ', '–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω–æ–µ –ø—é—Ä–µ', '—Ä–∏—Å', '—Å–∞–ª–∞—Ç –æ–≤–æ—â–Ω–æ–π',
            'soup', 'buckwheat porridge', 'pasta', 'cutlet', 'fish', 'meat',
            'stewed vegetables', 'mashed potatoes', 'rice', 'vegetable salad'
        ];

        const snackDishes = [
            '—Ñ—Ä—É–∫—Ç—ã', '—Å–æ–∫', '–∫–æ–º–ø–æ—Ç', '–∫–∏—Å–µ–ª—å', '–π–æ–≥—É—Ä—Ç', '—Ç–≤–æ—Ä–æ–≥',
            'fruits', 'juice', 'compote', 'kissel', 'yogurt', 'cottage cheese'
        ];

        if (breakfastDishes.some(dish => dishName.includes(dish))) {
            return '–∑–∞–≤—Ç—Ä–∞–∫';
        } else if (lunchDishes.some(dish => dishName.includes(dish))) {
            return '–æ–±–µ–¥';
        } else if (snackDishes.some(dish => dishName.includes(dish))) {
            return '–ø–æ–ª–¥–Ω–∏–∫';
        }

        return '–∑–∞–≤—Ç—Ä–∞–∫'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Å–∞ –¥–ª—è –±–ª—é–¥–∞
    getWeightForDish(dishName) {
        for (const [key, value] of Object.entries(this.dishWeights)) {
            if (dishName.includes(key)) {
                return value;
            }
        }
        return '100 –≥'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –¥–ª—è –±–ª—é–¥–∞
    getRecipeForDish(dishName) {
        for (const [key, value] of Object.entries(this.dishRecipes)) {
            if (dishName.includes(key)) {
                return value;
            }
        }
        return '1/1'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }

    // –ó–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞
    capitalizeFirstLetter(string) {
        return string.charAt(0).toUpperCase() + string.slice(1);
    }

    // Fallback –¥–∞–Ω–Ω—ã–µ
    getFallbackData() {
        console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é fallback –¥–∞–Ω–Ω—ã–µ...');
        return this.createStandardRussianDishes(1);
    }
}

module.exports = SchoolMenuParser;
