/**
 * –£–ª—É—á—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */

import bcrypt from 'bcryptjs';
import jwt from 'jsonwebtoken';
import rateLimit from 'express-rate-limit';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
export const SECURITY_CONFIG = {
  // JWT –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  JWT_SECRET: process.env.JWT_SECRET || 'your-super-secret-jwt-key-change-in-production',
  JWT_EXPIRES_IN: '24h',
  JWT_REFRESH_EXPIRES_IN: '7d',
  
  // Bcrypt –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  BCRYPT_ROUNDS: 12, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 10 –¥–æ 12 –¥–ª—è –±–æ–ª—å—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  
  // Rate limiting
  RATE_LIMIT_WINDOW_MS: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  RATE_LIMIT_MAX_REQUESTS: 100, // 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 15 –º–∏–Ω—É—Ç
  
  // –ü–∞—Ä–æ–ª–∏
  PASSWORD_MIN_LENGTH: 8,
  PASSWORD_REQUIREMENTS: {
    minLength: 8,
    requireUppercase: true,
    requireLowercase: true,
    requireNumbers: true,
    requireSpecialChars: true
  },
  
  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
  TEMP_PASSWORD_LENGTH: 12,
  
  // –°–µ—Å—Å–∏–∏
  SESSION_TIMEOUT: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
};

// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
export function validatePassword(password) {
  const errors = [];
  
  if (password.length < SECURITY_CONFIG.PASSWORD_REQUIREMENTS.minLength) {
    errors.push(`–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º ${SECURITY_CONFIG.PASSWORD_REQUIREMENTS.minLength} —Å–∏–º–≤–æ–ª–æ–≤`);
  }
  
  if (SECURITY_CONFIG.PASSWORD_REQUIREMENTS.requireUppercase && !/[A-Z]/.test(password)) {
    errors.push('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã');
  }
  
  if (SECURITY_CONFIG.PASSWORD_REQUIREMENTS.requireLowercase && !/[a-z]/.test(password)) {
    errors.push('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã');
  }
  
  if (SECURITY_CONFIG.PASSWORD_REQUIREMENTS.requireNumbers && !/\d/.test(password)) {
    errors.push('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã');
  }
  
  if (SECURITY_CONFIG.PASSWORD_REQUIREMENTS.requireSpecialChars && !/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
    errors.push('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã');
  }
  
  return {
    isValid: errors.length === 0,
    errors
  };
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
export function generateSecurePassword(length = SECURITY_CONFIG.TEMP_PASSWORD_LENGTH) {
  const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';
  let password = '';
  
  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤
  password += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[Math.floor(Math.random() * 26)]; // –ó–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞
  password += 'abcdefghijklmnopqrstuvwxyz'[Math.floor(Math.random() * 26)]; // –°—Ç—Ä–æ—á–Ω–∞—è –±—É–∫–≤–∞
  password += '0123456789'[Math.floor(Math.random() * 10)]; // –¶–∏—Ñ—Ä–∞
  password += '!@#$%^&*'[Math.floor(Math.random() * 8)]; // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
  for (let i = password.length; i < length; i++) {
    password += charset[Math.floor(Math.random() * charset.length)];
  }
  
  // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª—ã
  return password.split('').sort(() => Math.random() - 0.5).join('');
}

// –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
export function hashPassword(password) {
  return bcrypt.hashSync(password, SECURITY_CONFIG.BCRYPT_ROUNDS);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
export function verifyPassword(password, hash) {
  return bcrypt.compareSync(password, hash);
}

// –°–æ–∑–¥–∞–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞
export function createToken(payload) {
  return jwt.sign(payload, SECURITY_CONFIG.JWT_SECRET, {
    expiresIn: SECURITY_CONFIG.JWT_EXPIRES_IN
  });
}

// –°–æ–∑–¥–∞–Ω–∏–µ refresh —Ç–æ–∫–µ–Ω–∞
export function createRefreshToken(payload) {
  return jwt.sign(payload, SECURITY_CONFIG.JWT_SECRET, {
    expiresIn: SECURITY_CONFIG.JWT_REFRESH_EXPIRES_IN
  });
}

// –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è JWT —Ç–æ–∫–µ–Ω–∞
export function verifyToken(token) {
  try {
    return jwt.verify(token, SECURITY_CONFIG.JWT_SECRET);
  } catch (error) {
    return null;
  }
}

// Rate limiting middleware
export const createRateLimit = (windowMs = SECURITY_CONFIG.RATE_LIMIT_WINDOW_MS, max = SECURITY_CONFIG.RATE_LIMIT_MAX_REQUESTS) => {
  return rateLimit({
    windowMs,
    max,
    message: {
      error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      retryAfter: Math.ceil(windowMs / 1000)
    },
    standardHeaders: true,
    legacyHeaders: false,
    handler: (req, res) => {
      res.status(429).json({
        error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        retryAfter: Math.ceil(windowMs / 1000)
      });
    }
  });
};

// –°—Ç—Ä–æ–≥–∏–π rate limiting –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
export const authRateLimit = createRateLimit(15 * 60 * 1000, 5); // 5 –ø–æ–ø—ã—Ç–æ–∫ –∑–∞ 15 –º–∏–Ω—É—Ç

// –û–±—ã—á–Ω—ã–π rate limiting
export const generalRateLimit = createRateLimit();

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏
export function requireRole(roles) {
  return (req, res, next) => {
    if (!req.user) {
      return res.status(401).json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' });
    }
    
    const userRoles = Array.isArray(roles) ? roles : [roles];
    if (!userRoles.includes(req.user.role)) {
      return res.status(403).json({ error: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤' });
    }
    
    next();
  };
}

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∫–æ–ª—ã
export function requireSchool(req, res, next) {
  if (!req.user || !req.user.school_id) {
    return res.status(403).json({ error: '–®–∫–æ–ª–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞' });
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–π —à–∫–æ–ª–µ
  const requestedSchoolId = req.params.schoolId || req.body.school_id;
  if (requestedSchoolId && req.user.school_id != requestedSchoolId) {
    return res.status(403).json({ error: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω' });
  }
  
  next();
}

// –°–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
export function sanitizeInput(input) {
  if (typeof input === 'string') {
    return input
      .trim()
      .replace(/[<>]/g, '') // –£–¥–∞–ª—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
      .substring(0, 1000); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
  }
  return input;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è email
export function validateEmail(email) {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
export function logSecurityEvent(event, details, req) {
  const logEntry = {
    timestamp: new Date().toISOString(),
    event,
    details,
    ip: req?.ip || req?.connection?.remoteAddress,
    userAgent: req?.get('User-Agent'),
    userId: req?.user?.id
  };
  
  console.log('üîí Security Event:', JSON.stringify(logEntry, null, 2));
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
export function detectSuspiciousActivity(req) {
  const suspiciousPatterns = [
    /script/i,
    /javascript/i,
    /onload/i,
    /onerror/i,
    /<script/i,
    /eval\(/i,
    /expression\(/i
  ];
  
  const userInput = JSON.stringify(req.body) + JSON.stringify(req.query) + JSON.stringify(req.params);
  
  return suspiciousPatterns.some(pattern => pattern.test(userInput));
}

export default {
  SECURITY_CONFIG,
  validatePassword,
  generateSecurePassword,
  hashPassword,
  verifyPassword,
  createToken,
  createRefreshToken,
  verifyToken,
  createRateLimit,
  authRateLimit,
  generalRateLimit,
  requireRole,
  requireSchool,
  sanitizeInput,
  validateEmail,
  logSecurityEvent,
  detectSuspiciousActivity
};
