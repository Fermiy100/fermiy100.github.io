/**
 * –¢–ï–°–¢ –ü–ê–†–°–ï–†–ê –ú–ï–ù–Æ
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–∞—Ö –¥–∞–Ω–Ω—ã—Ö
 */

import { ImprovedMenuParser } from './improvedMenuParser.js';
import XLSX from 'xlsx';

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testData = [
  ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞'],
  ['–ó–∞–≤—Ç—Ä–∞–∫', '–ó–∞–≤—Ç—Ä–∞–∫', '–ó–∞–≤—Ç—Ä–∞–∫', '–ó–∞–≤—Ç—Ä–∞–∫', '–ó–∞–≤—Ç—Ä–∞–∫'],
  ['–ö–∞—à–∞ –æ–≤—Å—è–Ω–∞—è 200–≥', '–ö–∞—à–∞ –≥—Ä–µ—á–Ω–µ–≤–∞—è 200–≥', '–ö–∞—à–∞ –º–∞–Ω–Ω–∞—è 200–≥', '–ö–∞—à–∞ —Ä–∏—Å–æ–≤–∞—è 200–≥', '–ö–∞—à–∞ –ø—à–µ–Ω–Ω–∞—è 200–≥'],
  ['–ß–∞–π —Å —Å–∞—Ö–∞—Ä–æ–º 200–º–ª', '–ö–∞–∫–∞–æ 200–º–ª', '–ú–æ–ª–æ–∫–æ 200–º–ª', '–ß–∞–π —Å –ª–∏–º–æ–Ω–æ–º 200–º–ª', '–ö–æ–º–ø–æ—Ç 200–º–ª'],
  ['–•–ª–µ–± —Å –º–∞—Å–ª–æ–º 20–≥', '–•–ª–µ–± —Å —Å—ã—Ä–æ–º 20–≥', '–•–ª–µ–± —Å –≤–∞—Ä–µ–Ω—å–µ–º 20–≥', '–•–ª–µ–± —Å –º–µ–¥–æ–º 20–≥', '–•–ª–µ–± —Å –¥–∂–µ–º–æ–º 20–≥'],
  ['', '', '', '', ''],
  ['–û–±–µ–¥', '–û–±–µ–¥', '–û–±–µ–¥', '–û–±–µ–¥', '–û–±–µ–¥'],
  ['–°—É–ø –≥–æ—Ä–æ—Ö–æ–≤—ã–π 250–≥', '–ë–æ—Ä—â 250–≥', '–°—É–ø –æ–≤–æ—â–Ω–æ–π 250–≥', '–°—É–ø –∫—É—Ä–∏–Ω—ã–π 250–≥', '–°—É–ø —Ä—ã–±–Ω—ã–π 250–≥'],
  ['–ö–æ—Ç–ª–µ—Ç–∞ –º—è—Å–Ω–∞—è 80–≥', '–†—ã–±–∞ –∂–∞—Ä–µ–Ω–∞—è 80–≥', '–ì—É–ª—è—à 80–≥', '–ö—É—Ä–∏—Ü–∞ —Ç—É—à–µ–Ω–∞—è 80–≥', '–¢–µ—Ñ—Ç–µ–ª–∏ 80–≥'],
  ['–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –ø—é—Ä–µ 150–≥', '–ì—Ä–µ—á–∫–∞ 150–≥', '–†–∏—Å 150–≥', '–ú–∞–∫–∞—Ä–æ–Ω—ã 150–≥', '–û–≤–æ—â–∏ —Ç—É—à–µ–Ω—ã–µ 150–≥'],
  ['–°–∞–ª–∞—Ç –∏–∑ –∫–∞–ø—É—Å—Ç—ã 60–≥', '–°–∞–ª–∞—Ç –∏–∑ –º–æ—Ä–∫–æ–≤–∏ 60–≥', '–°–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∫–ª—ã 60–≥', '–°–∞–ª–∞—Ç –∏–∑ –æ–≥—É—Ä—Ü–æ–≤ 60–≥', '–°–∞–ª–∞—Ç –∏–∑ –ø–æ–º–∏–¥–æ—Ä–æ–≤ 60–≥'],
  ['–ö–æ–º–ø–æ—Ç 200–º–ª', '–ß–∞–π 200–º–ª', '–ö–∏—Å–µ–ª—å 200–º–ª', '–ú–æ—Ä—Å 200–º–ª', '–°–æ–∫ 200–º–ª']
];

// –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç–∏
function createTestExcel() {
  const workbook = XLSX.utils.book_new();
  const worksheet = XLSX.utils.aoa_to_sheet(testData);
  XLSX.utils.book_append_sheet(workbook, worksheet, '–ú–µ–Ω—é');
  
  return XLSX.write(workbook, { type: 'buffer', bookType: 'xlsx' });
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä
async function testParser() {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª
    const excelBuffer = createTestExcel();
    console.log('üìä –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª');
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    const parser = new ImprovedMenuParser();
    console.log('üîß –°–æ–∑–¥–∞–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–∞—Ä—Å–µ—Ä–∞');
    
    // –ü–∞—Ä—Å–∏–º —Ñ–∞–π–ª
    const items = parser.parseExcelFile(excelBuffer);
    console.log(`‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ ${items.length} –±–ª—é–¥`);
    
    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const validation = parser.validateParsedMenu(items);
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏:');
    console.log(`  - –í–∞–ª–∏–¥–Ω–æ: ${validation.isValid}`);
    console.log(`  - –û—à–∏–±–∫–∏: ${validation.errors.length}`);
    console.log(`  - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${validation.warnings.length}`);
    console.log(`  - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`, validation.stats);
    
    if (validation.errors.length > 0) {
      console.log('‚ùå –û—à–∏–±–∫–∏:');
      validation.errors.forEach(error => console.log(`  - ${error}`));
    }
    
    if (validation.warnings.length > 0) {
      console.log('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:');
      validation.warnings.forEach(warning => console.log(`  - ${warning}`));
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –±–ª—é–¥
    console.log('üçΩÔ∏è –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –±–ª—é–¥:');
    items.slice(0, 10).forEach((item, index) => {
      console.log(`  ${index + 1}. ${item.name} (${item.meal_type}, –¥–µ–Ω—å ${item.day_of_week})`);
    });
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–Ω—è–º
    const groupedByDay = items.reduce((acc, item) => {
      if (!acc[item.day_of_week]) acc[item.day_of_week] = [];
      acc[item.day_of_week].push(item);
      return acc;
    }, {});
    
    console.log('üìÖ –ë–ª—é–¥–∞ –ø–æ –¥–Ω—è–º:');
    Object.keys(groupedByDay).forEach(day => {
      const dayNames = ['', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'];
      console.log(`  ${dayNames[day]}: ${groupedByDay[day].length} –±–ª—é–¥`);
    });
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏
    const groupedByMeal = items.reduce((acc, item) => {
      if (!acc[item.meal_type]) acc[item.meal_type] = [];
      acc[item.meal_type].push(item);
      return acc;
    }, {});
    
    console.log('üç¥ –ë–ª—é–¥–∞ –ø–æ —Ç–∏–ø–∞–º –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏:');
    Object.keys(groupedByMeal).forEach(meal => {
      console.log(`  ${meal}: ${groupedByMeal[meal].length} –±–ª—é–¥`);
    });
    
    console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testParser();