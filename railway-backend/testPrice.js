/**
 * –¢–ï–°–¢ –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø –¶–ï–ù–´
 */

import { UltimateMenuParser } from './ultimateMenuParser.js';

const parser = new UltimateMenuParser();

console.log('üîç –¢–ï–°–¢ –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø –¶–ï–ù–´...\n');

const testCases = [
  ['–ë–æ—Ä—â —Å –º—è—Å–æ–º', '120 —Ä—É–±'],
  ['–ì—Ä–µ—á–Ω–µ–≤–∞—è –∫–∞—à–∞', '80 —Ä—É–±'],
  ['–ö–æ—Ç–ª–µ—Ç–∞', '150 —Ä—É–±'],
  ['120 —Ä—É–±', '–ë–æ—Ä—â —Å –º—è—Å–æ–º'],
  ['–ë–æ—Ä—â 120 —Ä—É–± —Å –º—è—Å–æ–º']
];

testCases.forEach((row, i) => {
  console.log(`–¢–µ—Å—Ç ${i + 1}: [${row.join(', ')}]`);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  const rowText = row.join(' ');
  console.log(`   –¢–µ–∫—Å—Ç: "${rowText}"`);
  
  parser.pricePatterns.forEach((pattern, j) => {
    const match = rowText.match(pattern);
    if (match) {
      console.log(`   ‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω ${j + 1}: ${match[0]} -> ${match[1]}`);
    }
  });
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º extractPrice
  const price = parser.extractPrice(row, 0);
  console.log(`   üí∞ –ò–∑–≤–ª–µ—á–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞: ${price}‚ÇΩ`);
  console.log('');
});
