/**
 * –¢–ï–°–¢ –®–ö–û–õ–¨–ù–û–ì–û –ü–ê–†–°–ï–†–ê
 */

import { SchoolMenuParser } from './schoolMenuParser.js';
import XLSX from 'xlsx';
import fs from 'fs';

const filePath = '../2-–Ø –ù–ï–î–ï–õ–Ø –î–õ–Ø –ó–ê–ö–ê–ó–ê  22.09-26.09 (–∫–æ–ø–∏—è) ‚Äî –∫–æ–ø–∏—è.xlsx';

console.log('üß™ –¢–ï–°–¢–ò–†–£–Æ –®–ö–û–õ–¨–ù–´–ô –ü–ê–†–°–ï–†...\n');

try {
  const parser = new SchoolMenuParser();
  
  // –ß–∏—Ç–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
  const buffer = fs.readFileSync(filePath);
  const result = parser.parseExcelFile(buffer);
  
  console.log('‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–ê–†–°–ò–ù–ì–ê:');
  console.log(`üìä –í—Å–µ–≥–æ –±–ª—é–¥: ${result.totalItems}`);
  console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${result.message}`);
  
  if (result.errors && result.errors.length > 0) {
    console.log('‚ùå –û—à–∏–±–∫–∏:');
    result.errors.forEach(error => console.log(`   - ${error}`));
  }
  
  if (result.warnings && result.warnings.length > 0) {
    console.log('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:');
    result.warnings.forEach(warning => console.log(`   - ${warning}`));
  }
  
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
  console.log('\nüìÖ –ì–†–£–ü–ü–ò–†–û–í–ö–ê –ü–û –î–ù–Ø–ú:');
  const groupedByDay = {};
  result.items.forEach(item => {
    if (!groupedByDay[item.day_of_week]) {
      groupedByDay[item.day_of_week] = [];
    }
    groupedByDay[item.day_of_week].push(item);
  });
  
  const dayNames = ['', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞'];
  Object.keys(groupedByDay).forEach(day => {
    console.log(`\n${dayNames[day]}:`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º –ø–∏—Ç–∞–Ω–∏—è
    const groupedByMeal = {};
    groupedByDay[day].forEach(item => {
      if (!groupedByMeal[item.meal_type]) {
        groupedByMeal[item.meal_type] = [];
      }
      groupedByMeal[item.meal_type].push(item);
    });
    
    Object.keys(groupedByMeal).forEach(mealType => {
      console.log(`  ${mealType.toUpperCase()}:`);
      groupedByMeal[mealType].forEach(item => {
        console.log(`    - ${item.name} (${item.portion}) - ${item.price}‚ÇΩ`);
        if (item.recipe_number) {
          console.log(`      –†–µ—Ü–µ–ø—Ç: ‚Ññ${item.recipe_number}`);
        }
      });
    });
  });
  
  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  const mealStats = {};
  result.items.forEach(item => {
    if (!mealStats[item.meal_type]) {
      mealStats[item.meal_type] = 0;
    }
    mealStats[item.meal_type]++;
  });
  
  Object.keys(mealStats).forEach(mealType => {
    console.log(`  ${mealType}: ${mealStats[mealType]} –±–ª—é–¥`);
  });
  
  console.log('\nüéâ –¢–ï–°–¢ –®–ö–û–õ–¨–ù–û–ì–û –ü–ê–†–°–ï–†–ê –ó–ê–í–ï–†–®–ï–ù!');
  
} catch (error) {
  console.error('‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê:', error.message);
  console.error(error.stack);
}
