// üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Railway —á–µ—Ä–µ–∑ GitHub
const https = require('https');

console.log('üöÄ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï RAILWAY –ß–ï–†–ï–ó GITHUB...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Railway
function checkRailwayStatus() {
    return new Promise((resolve, reject) => {
        const options = {
            hostname: 'fermiy100githubio-production.up.railway.app',
            port: 443,
            path: '/',
            method: 'GET',
            headers: {
                'User-Agent': 'Railway-Update-Script'
            }
        };

        const req = https.request(options, (res) => {
            let data = '';
            res.on('data', (chunk) => {
                data += chunk;
            });
            res.on('end', () => {
                try {
                    const jsonData = JSON.parse(data);
                    resolve(jsonData);
                } catch (error) {
                    resolve({ error: 'Failed to parse response' });
                }
            });
        });

        req.on('error', (error) => {
            reject(error);
        });

        req.end();
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ–Ω—é Railway
function checkRailwayMenu() {
    return new Promise((resolve, reject) => {
        const options = {
            hostname: 'fermiy100githubio-production.up.railway.app',
            port: 443,
            path: '/api/menu',
            method: 'GET',
            headers: {
                'User-Agent': 'Railway-Update-Script'
            }
        };

        const req = https.request(options, (res) => {
            let data = '';
            res.on('data', (chunk) => {
                data += chunk;
            });
            res.on('end', () => {
                try {
                    const jsonData = JSON.parse(data);
                    resolve(jsonData);
                } catch (error) {
                    resolve({ error: 'Failed to parse menu response' });
                }
            });
        });

        req.on('error', (error) => {
            reject(error);
        });

        req.end();
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function updateRailway() {
    console.log('üì° –ü—Ä–æ–≤–µ—Ä—è—é —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Railway...');
    
    try {
        const status = await checkRailwayStatus();
        console.log('üìä –°—Ç–∞—Ç—É—Å Railway:', status);
        
        const menu = await checkRailwayMenu();
        console.log('üçΩÔ∏è –ú–µ–Ω—é Railway:', Array.isArray(menu) ? `${menu.length} –±–ª—é–¥` : menu);
        
        if (Array.isArray(menu) && menu.length === 75) {
            console.log('‚úÖ Railway —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω —Å 75 –±–ª—é–¥–∞–º–∏!');
            return;
        }
        
        console.log('‚ö†Ô∏è Railway –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω. –ù—É–∂–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...');
        console.log('üîß –°–æ–∑–¥–∞—é —Ñ–∞–π–ª –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
        
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const fs = require('fs');
        const updateFile = `RAILWAY_FORCE_UPDATE_${Date.now()}.txt`;
        const content = `
RAILWAY FORCE UPDATE
Timestamp: ${new Date().toISOString()}
Status: Railway needs to be updated with Ultimate Parser
Current dishes: ${Array.isArray(menu) ? menu.length : 0}
Required dishes: 75
Action: Force restart Railway with new code
`;
        
        fs.writeFileSync(updateFile, content);
        console.log(`üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${updateFile}`);
        
        console.log('üöÄ Railway –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ GitHub –∏–ª–∏ Railway Dashboard');
        console.log('üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:');
        console.log('1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ railway-backend/ –Ω–∞ GitHub');
        console.log('2. Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º');
        console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ https://fermiy100githubio-production.up.railway.app/');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Railway:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateRailway();
