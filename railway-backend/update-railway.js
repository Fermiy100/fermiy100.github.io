// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Railway
// –ó–∞–ø—É—Å—Ç–∏—Ç—å: node update-railway.js

const https = require('https');

console.log('üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Railway...');

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Railway
const options = {
    hostname: 'fermiy100githubio-production.up.railway.app',
    port: 443,
    path: '/',
    method: 'GET',
    headers: {
        'User-Agent': 'Railway-Update-Script'
    }
};

const req = https.request(options, (res) => {
    console.log(`üì° –°—Ç–∞—Ç—É—Å Railway: ${res.statusCode}`);
    
    let data = '';
    res.on('data', (chunk) => {
        data += chunk;
    });
    
    res.on('end', () => {
        try {
            const jsonData = JSON.parse(data);
            console.log('‚úÖ Railway API —Ä–∞–±–æ—Ç–∞–µ—Ç:');
            console.log(`   - –°—Ç–∞—Ç—É—Å: ${jsonData.status}`);
            console.log(`   - –°–æ–æ–±—â–µ–Ω–∏–µ: ${jsonData.message}`);
            console.log(`   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥: ${jsonData.dishCount}`);
            console.log(`   - –í—Ä–µ–º—è: ${jsonData.time}`);
            
            if (jsonData.dishCount === 0) {
                console.log('‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: Railway –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0 –±–ª—é–¥!');
                console.log('   –ù—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Railway —Å–µ—Ä–≤–µ—Ä');
            } else {
                console.log('‚úÖ Railway —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
            }
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ Railway:', error.message);
        }
    });
});

req.on('error', (error) => {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway:', error.message);
});

req.end();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–Ω—é
setTimeout(() => {
    console.log('\nüçΩÔ∏è –ü—Ä–æ–≤–µ—Ä—è—é –º–µ–Ω—é Railway...');
    
    const menuOptions = {
        hostname: 'fermiy100githubio-production.up.railway.app',
        port: 443,
        path: '/api/menu',
        method: 'GET',
        headers: {
            'User-Agent': 'Railway-Update-Script'
        }
    };
    
    const menuReq = https.request(menuOptions, (res) => {
        console.log(`üì° –°—Ç–∞—Ç—É—Å –º–µ–Ω—é: ${res.statusCode}`);
        
        let data = '';
        res.on('data', (chunk) => {
            data += chunk;
        });
        
        res.on('end', () => {
            try {
                const menuData = JSON.parse(data);
                console.log(`‚úÖ –ú–µ–Ω—é Railway: ${menuData.length} –±–ª—é–¥`);
                
                if (menuData.length === 0) {
                    console.log('‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –ú–µ–Ω—é –ø—É—Å—Ç–æ–µ!');
                    console.log('   –ù—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Railway —Å–µ—Ä–≤–µ—Ä');
                } else {
                    console.log('‚úÖ –ú–µ–Ω—é –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
                    console.log(`   –ü–µ—Ä–≤–æ–µ –±–ª—é–¥–æ: ${menuData[0]?.name || 'N/A'}`);
                }
            } catch (error) {
                console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –º–µ–Ω—é:', error.message);
            }
        });
    });
    
    menuReq.on('error', (error) => {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –º–µ–Ω—é Railway:', error.message);
    });
    
    menuReq.end();
}, 1000);
